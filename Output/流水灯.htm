<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\..\Output\流水灯.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\..\Output\流水灯.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sat Nov 12 22:05:58 2022
<BR><P>
<H3>Maximum Stack Usage =        984 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
AppTaskShot &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[4e2]">CPU_IntDis</a>
 <LI><a href="#[4e3]">CPU_IntEn</a>
 <LI><a href="#[355]">CPU_SR_Save</a>
 <LI><a href="#[356]">CPU_SR_Restore</a>
 <LI><a href="#[4e4]">CPU_WaitForInt</a>
 <LI><a href="#[4e5]">CPU_WaitForExcept</a>
 <LI><a href="#[380]">CPU_CntLeadZeros</a>
 <LI><a href="#[4e6]">CPU_CntTrailZeros</a>
 <LI><a href="#[4e7]">CPU_RevBits</a>
 <LI><a href="#[35e]">OSStartHighRdy</a>
 <LI><a href="#[31]">OS_CPU_PendSVHandler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[45]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[45]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[487]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[487]">_Findy1</a><BR>
 <LI><a href="#[489]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[489]">_Findx1</a><BR>
 <LI><a href="#[488]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[488]">_Findx0</a><BR>
 <LI><a href="#[442]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[442]">WM__InvalidateRect</a><BR>
 <LI><a href="#[427]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[427]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[422]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[422]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[2d]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">BusFault_Handler</a><BR>
 <LI><a href="#[454]">_PopFreeBlock</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[483]">_EnlargeBlocks</a><BR>
 <LI><a href="#[21b]">_Alloc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[221]">_InitOnce</a><BR>
 <LI><a href="#[3fc]">WM_SendToParent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[42b]">WM__SendMessage</a><BR>
 <LI><a href="#[3e3]">WM__UpdateChildPositions</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[42d]">WM_ResizeWindow</a><BR>
 <LI><a href="#[444]">_MoveDescendents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[444]">_MoveDescendents</a><BR>
 <LI><a href="#[412]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[412]">_GetDialogItem</a><BR>
 <LI><a href="#[408]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[408]">WM__ForEachDesc</a><BR>
 <LI><a href="#[40b]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[40b]">_GetDialogItem</a><BR>
 <LI><a href="#[2c]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">MemManage_Handler</a><BR>
 <LI><a href="#[2e]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">UsageFault_Handler</a><BR>
 <LI><a href="#[4a4]">_Screen2hWin</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4a4]">_Screen2hWin</a><BR>
 <LI><a href="#[402]">_DeleteAllChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3fe]">WM_DeleteWindow</a><BR>
 <LI><a href="#[448]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[448]">_PaintTransChildren</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[45]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[62]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[76]">AppTaskShot</a> from main.o(i.AppTaskShot) referenced from main.o(i.AppTaskCreate)
 <LI><a href="#[db]">AppTaskStart</a> from main.o(i.AppTaskStart) referenced from main.o(i.main)
 <LI><a href="#[75]">AppTaskUpdate</a> from main.o(i.AppTaskUpdate) referenced from main.o(i.AppTaskCreate)
 <LI><a href="#[77]">AppTaskUserapp</a> from main.o(i.AppTaskUserapp) referenced from main.o(i.AppTaskCreate)
 <LI><a href="#[aa]">BUTTON_DrawSkinFlex</a> from button_skinflex.o(i.BUTTON_DrawSkinFlex) referenced from app.o(i.UserAPP)
 <LI><a href="#[2d]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[49]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[ab]">CHECKBOX_DrawSkinFlex</a> from checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex) referenced from app.o(i.UserAPP)
 <LI><a href="#[21]">CHECKBOX__GetButtonSize</a> from checkbox.o(i.CHECKBOX__GetButtonSize) referenced 2 times from checkbox.o(.data)
 <LI><a href="#[3e]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6b]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6c]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6d]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6e]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[ac]">DROPDOWN_DrawSkinFlex</a> from dropdown_skinflex.o(i.DROPDOWN_DrawSkinFlex) referenced from app.o(i.UserAPP)
 <LI><a href="#[30]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5b]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">EXTI4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4a]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a]">FRAMEWIN_DrawSkinFlex</a> from framewin_skinflex.o(i.FRAMEWIN_DrawSkinFlex) referenced 2 times from framewin_skin.o(.data)
 <LI><a href="#[a]">FRAMEWIN_DrawSkinFlex</a> from framewin_skinflex.o(i.FRAMEWIN_DrawSkinFlex) referenced from app.o(i.UserAPP)
 <LI><a href="#[b9]">FRAMEWIN_OwnerDraw</a> from framewin_skinclassic.o(i.FRAMEWIN_OwnerDraw) referenced from framewin_skinclassic.o(i._Create)
 <LI><a href="#[22]">FRAMEWIN__GetBorderSize</a> from framewin.o(i.FRAMEWIN__GetBorderSize) referenced 2 times from framewin.o(.data)
 <LI><a href="#[63]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9b]">GUIDRV_FlexColor_SetFunc66709</a> from guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[9a]">GUIDRV_FlexColor_SetMode16bppC0B16</a> from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[82]">GUIDRV_FlexColor__GetPixelIndexNoCache</a> from guidrv_flexcolor.o(i.GUIDRV_FlexColor__GetPixelIndexNoCache) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[86]">GUIDRV_FlexColor__SetLog2Phys</a> from guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetLog2Phys) referenced from guidrv_flexcolor.o(i.GUIDRV_FlexColor__InitOnce)
 <LI><a href="#[83]">GUIDRV_FlexColor__SetPixelIndexNoCache</a> from guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetPixelIndexNoCache) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[110]">GUIMONO_DispChar</a> from gui_charm.o(i.GUIMONO_DispChar) referenced from f6x8.o(.constdata)
 <LI><a href="#[111]">GUIMONO_GetCharDistX</a> from gui_charm.o(i.GUIMONO_GetCharDistX) referenced from f6x8.o(.constdata)
 <LI><a href="#[112]">GUIMONO_GetFontInfo</a> from gui_charm.o(i.GUIMONO_GetFontInfo) referenced from f6x8.o(.constdata)
 <LI><a href="#[113]">GUIMONO_IsInFont</a> from gui_charm.o(i.GUIMONO_IsInFont) referenced from f6x8.o(.constdata)
 <LI><a href="#[10c]">GUIPROP_DispChar</a> from gui_charp.o(i.GUIPROP_DispChar) referenced 5 times from f08_ascii.o(.constdata)
 <LI><a href="#[10d]">GUIPROP_GetCharDistX</a> from gui_charp.o(i.GUIPROP_GetCharDistX) referenced 5 times from f08_ascii.o(.constdata)
 <LI><a href="#[10e]">GUIPROP_GetFontInfo</a> from gui_charp.o(i.GUIPROP_GetFontInfo) referenced 5 times from f08_ascii.o(.constdata)
 <LI><a href="#[10f]">GUIPROP_IsInFont</a> from gui_charp.o(i.GUIPROP_IsInFont) referenced 5 times from f08_ascii.o(.constdata)
 <LI><a href="#[a3]">GUI_DrawGradientH</a> from gui_drawgradient.o(i.GUI_DrawGradientH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[a6]">GUI_DrawGradientV</a> from gui_drawgradient.o(i.GUI_DrawGradientV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[f]">GUI_DrawStreamedBitmap</a> from gui_stream.o(i.GUI_DrawStreamedBitmap) referenced 2 times from iconview.o(.data)
 <LI><a href="#[cf]">GUI_MEMDEV_Paint1Static</a> from guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static) referenced from wm.o(i._Paint1)
 <LI><a href="#[c7]">GUI_MEMDEV__WriteToActiveAlpha</a> from guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha) referenced from guidev_32.o(i._GetDevFunc)
 <LI><a href="#[c6]">GUI_MEMDEV__WriteToActiveOpaque</a> from guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque) referenced from guidev_16.o(i._GetDevFunc)
 <LI><a href="#[2c4]">GUI_SetAlpha</a> from gui_setalpha.o(i.GUI_SetAlpha) referenced from gui_setalpha.o(i.GUI_SetAlpha)
 <LI><a href="#[8c]">GUI_TIMER_Exec</a> from gui_timer.o(i.GUI_TIMER_Exec) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[151]">GUI_USAGE_BM_AddHLine</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[150]">GUI_USAGE_BM_AddPixel</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[152]">GUI_USAGE_BM_Clear</a> from guidev_usagebm.o(i.GUI_USAGE_BM_Clear) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[154]">GUI_USAGE_BM_GetNextDirty</a> from guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[ec]">GUI_XBF__GetCharDistX</a> from gui_xbf.o(i.GUI_XBF__GetCharDistX) referenced from gui_xbf_prop.o(.constdata)
 <LI><a href="#[ed]">GUI_XBF__GetFontInfo</a> from gui_xbf.o(i.GUI_XBF__GetFontInfo) referenced from gui_xbf_prop.o(.constdata)
 <LI><a href="#[ee]">GUI_XBF__IsInFont</a> from gui_xbf.o(i.GUI_XBF__IsInFont) referenced from gui_xbf_prop.o(.constdata)
 <LI><a href="#[1d]">GUI_X_ExecIdle</a> from gui_x_ucos.o(i.GUI_X_ExecIdle) referenced 2 times from gui_waitevent.o(.data)
 <LI><a href="#[1a]">GUI__MixColors</a> from gui__alpha.o(i.GUI__MixColors) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[1b]">GUI__MixColorsBulk</a> from gui__alpha.o(i.GUI__MixColorsBulk) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[73]">GetPinStateOfKey1</a> from key.o(i.GetPinStateOfKey1) referenced from main.o(i.AppObjCreate)
 <LI><a href="#[74]">GetPinStateOfKey2</a> from key.o(i.GetPinStateOfKey2) referenced from main.o(i.AppObjCreate)
 <LI><a href="#[af]">HEADER_DrawSkinFlex</a> from header_skinflex.o(i.HEADER_DrawSkinFlex) referenced from app.o(i.UserAPP)
 <LI><a href="#[2b]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[53]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[52]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[55]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[54]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[94]">ICONVIEW_Callback</a> from iconview.o(i.ICONVIEW_Callback) referenced from iconview.o(i.ICONVIEW_CreateUser)
 <LI><a href="#[89]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_core.o(.constdata)
 <LI><a href="#[89]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_drawgradient.o(i.GUI_DrawGradientV)
 <LI><a href="#[e6]">LCD_DrawPixel</a> from lcd.o(i.LCD_DrawPixel) referenced from gui_core.o(.constdata)
 <LI><a href="#[88]">LCD_DrawVLine</a> from lcd.o(i.LCD_DrawVLine) referenced from gui_drawgradient.o(i.GUI_DrawGradientH)
 <LI><a href="#[0]">LCD_GetpPalConvTableBM</a> from lcd_color.o(i.LCD_GetpPalConvTableBM) referenced 2 times from gui_core.o(.data)
 <LI><a href="#[dd]">LCD_Index2Color_565</a> from guicc_565_index2color.o(i.LCD_Index2Color_565) referenced from guicc_565.o(.constdata)
 <LI><a href="#[8f]">LCD_Index2Color_888</a> from guicc_888_index2color.o(i.LCD_Index2Color_888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[8a]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[8a]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha)
 <LI><a href="#[8a]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[8a]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from lcd_rle32.o(i._Draw)
 <LI><a href="#[e2]">LCD_Index2Color_M565</a> from guicc_m565_index2color.o(i.LCD_Index2Color_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[cb]">LCD_SetPixelAA</a> from lcd_aa.o(i.LCD_SetPixelAA) referenced from lcd_rotatecw.o(i._GetpfSetPixel)
 <LI><a href="#[ca]">LCD_SetPixelAA_NoTrans</a> from lcd_aa.o(i.LCD_SetPixelAA_NoTrans) referenced from lcd_rotatecw.o(i._GetpfSetPixel)
 <LI><a href="#[cc]">LCD_SetPixelAA_Xor</a> from lcd_aa.o(i.LCD_SetPixelAA_Xor) referenced from lcd_rotatecw.o(i._GetpfSetPixel)
 <LI><a href="#[99]">LcdReadDataMultiple</a> from lcdconf_flexcolor_template.o(i.LcdReadDataMultiple) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[97]">LcdWriteData</a> from lcdconf_flexcolor_template.o(i.LcdWriteData) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[98]">LcdWriteDataMultiple</a> from lcdconf_flexcolor_template.o(i.LcdWriteDataMultiple) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[96]">LcdWriteReg</a> from lcdconf_flexcolor_template.o(i.LcdWriteReg) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[b1]">MULTIPAGE_DrawSkinFlex</a> from multipage_skinflex.o(i.MULTIPAGE_DrawSkinFlex) referenced from app.o(i.UserAPP)
 <LI><a href="#[2c]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[72]">OSTaskSwHook</a> from os_cpu_c.o(i.OSTaskSwHook) referenced from os_cpu_a.o(CODE)
 <LI><a href="#[31]">OS_CPU_PendSVHandler</a> from os_cpu_a.o(CODE) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">OS_CPU_SysTickHandler</a> from os_cpu_c.o(i.OS_CPU_SysTickHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9d]">OS_IdleTask</a> from os_core.o(i.OS_IdleTask) referenced from os_core.o(i.OS_IdleTaskInit)
 <LI><a href="#[9e]">OS_StatTask</a> from os_stat.o(i.OS_StatTask) referenced from os_stat.o(i.OS_StatTaskInit)
 <LI><a href="#[9c]">OS_TaskReturn</a> from os_task.o(i.OS_TaskReturn) referenced from os_cpu_c.o(i.OSTaskStkInit)
 <LI><a href="#[9f]">OS_TickTask</a> from os_tick.o(i.OS_TickTask) referenced from os_tick.o(i.OS_TickTaskInit)
 <LI><a href="#[a0]">OS_TmrTask</a> from os_tmr.o(i.OS_TmrTask) referenced from os_tmr.o(i.OS_TmrInit)
 <LI><a href="#[a9]">PROGBAR_DrawSkinFlex</a> from progbar_skinflex.o(i.PROGBAR_DrawSkinFlex) referenced from app.o(i.UserAPP)
 <LI><a href="#[34]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b0]">RADIO_DrawSkinFlex</a> from radio_skinflex.o(i.RADIO_DrawSkinFlex) referenced from app.o(i.UserAPP)
 <LI><a href="#[23]">RADIO__GetButtonSize</a> from radio.o(i.RADIO__GetButtonSize) referenced 2 times from radio.o(.data)
 <LI><a href="#[38]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5c]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">RTC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a1]">SCROLLBAR_Callback</a> from scrollbar.o(i.SCROLLBAR_Callback) referenced from scrollbar.o(i.SCROLLBAR_CreateUser)
 <LI><a href="#[ad]">SCROLLBAR_DrawSkinFlex</a> from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex) referenced from app.o(i.UserAPP)
 <LI><a href="#[64]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[ae]">SLIDER_DrawSkinFlex</a> from slider_skinflex.o(i.SLIDER_DrawSkinFlex) referenced from app.o(i.UserAPP)
 <LI><a href="#[56]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[57]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[66]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[70]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[35]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a8]">TEXT_Callback</a> from text.o(i.TEXT_Callback) referenced from text.o(i.TEXT_CreateUser)
 <LI><a href="#[4b]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4e]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4d]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4c]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4f]">TIM2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[50]">TIM3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[51]">TIM4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[65]">TIM5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[69]">TIM6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6a]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5e]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[61]">TIM8_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[60]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5f]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[67]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[68]">UART5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[58]">USART1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[59]">USART2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5a]">USART3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5d]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[46]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[169]">WIDGET_EFFECT_3D_DrawUp</a> from widget_effect_3d.o(i.WIDGET_EFFECT_3D_DrawUp) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[8b]">WM_HandlePID</a> from wm_touch.o(i.WM_HandlePID) referenced from gui_pid.o(i.GUI_PID_StoreState)
 <LI><a href="#[d0]">WM__Paint1</a> from wm.o(i.WM__Paint1) referenced from wm.o(i._Paint1)
 <LI><a href="#[33]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b8]">_CalcPositions</a> from scrollbar_skin.o(i._CalcPositions) referenced 2 times from scrollbar_skin.o(i._Create)
 <LI><a href="#[e9]">_CalcSizeOfChar</a> from gui_uc_encodeutf8.o(i._CalcSizeOfChar) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[114]">_Color2Index</a> from gui_setalpha.o(i._Color2Index) referenced from gui_setalpha.o(.constdata)
 <LI><a href="#[df]">_Color2IndexBulk</a> from guicc_565.o(i._Color2IndexBulk) referenced 4 times from guicc_565.o(.constdata)
 <LI><a href="#[141]">_Color2Index_0</a> from guicc_0.o(i._Color2Index_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[dc]">_Color2Index_565</a> from guicc_565.o(i._Color2Index_565) referenced from guicc_565.o(.constdata)
 <LI><a href="#[129]">_Color2Index_8888</a> from guicc_8888.o(i._Color2Index_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[e1]">_Color2Index_M565</a> from guicc_m565.o(i._Color2Index_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[156]">_Create</a> from button_skinclassic.o(i._Create) referenced 10 times from button_skinclassic.o(.constdata)
 <LI><a href="#[4]">_Create</a> from button_skin.o(i._Create) referenced 20 times from button_skin.o(.data)
 <LI><a href="#[eb]">_DispChar</a> from gui_xbf_prop.o(i._DispChar) referenced from gui_xbf_prop.o(.constdata)
 <LI><a href="#[be]">_Draw</a> from lcd_rle32.o(i._Draw) referenced from lcd_rle32.o(i._DrawBitmap)
 <LI><a href="#[a5]">_DrawBackgroundH</a> from scrollbar_skinflex.o(i._DrawBackgroundH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[a2]">_DrawBackgroundV</a> from scrollbar_skinflex.o(i._DrawBackgroundV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[f0]">_DrawBitmap</a> from guidrv_flexcolor.o(i._DrawBitmap) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[80]">_DrawBitmap</a> from guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitmap) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[91]">_DrawBitmap</a> from iconview.o(i._DrawBitmap) referenced from iconview.o(i.ICONVIEW_AddBitmapItem)
 <LI><a href="#[1e]">_DrawBitmapCW</a> from lcd_rotatecw.o(i._DrawBitmapCW) referenced 2 times from lcd_rotatecw.o(.data)
 <LI><a href="#[ef]">_DrawBitmap_RLE32</a> from lcd_rle32.o(i._DrawBitmap_RLE32) referenced from lcd_rle32.o(.constdata)
 <LI><a href="#[bd]">_DrawClip</a> from lcd_rle32.o(i._DrawClip) referenced from lcd_rle32.o(i._DrawBitmap)
 <LI><a href="#[13e]">_DrawDown</a> from widget_effect_none.o(i._DrawDown) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[13f]">_DrawDownRect</a> from widget_effect_none.o(i._DrawDownRect) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[140]">_DrawFlat</a> from widget_effect_none.o(i._DrawFlat) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[a7]">_DrawGraspH</a> from scrollbar_skinflex.o(i._DrawGraspH) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[a4]">_DrawGraspV</a> from scrollbar_skinflex.o(i._DrawGraspV) referenced from scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
 <LI><a href="#[f1]">_DrawHLine</a> from guidrv_flexcolor.o(i._DrawHLine) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[92]">_DrawText</a> from iconview.o(i._DrawText) referenced from iconview.o(i.ICONVIEW_AddBitmapItem)
 <LI><a href="#[13c]">_DrawUp</a> from widget_effect_none.o(i._DrawUp) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[13d]">_DrawUpRect</a> from widget_effect_none.o(i._DrawUpRect) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[f2]">_DrawVLine</a> from guidrv_flexcolor.o(i._DrawVLine) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[ea]">_Encode</a> from gui_uc_encodeutf8.o(i._Encode) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[f3]">_FillRect</a> from guidrv_flexcolor.o(i._FillRect) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[81]">_FillRect</a> from guidrv_flexcolor_16bpp_c0b16.o(i._FillRect) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[153]">_GUI_USAGE_BM_Delete</a> from guidev_usagebm.o(i._GUI_USAGE_BM_Delete) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[9]">_GetBorderSize</a> from framewin_skin.o(i._GetBorderSize) referenced 4 times from framewin_skin.o(.data)
 <LI><a href="#[26]">_GetButtonSize</a> from checkbox_skinclassic.o(i._GetButtonSize) referenced 4 times from checkbox_skinclassic.o(.data)
 <LI><a href="#[bf]">_GetByte_pPixel</a> from lcd_rle32.o(i._GetByte_pPixel) referenced from lcd_rle32.o(i._DrawBitmap_RLE32)
 <LI><a href="#[e7]">_GetCharCode</a> from gui_uc_encodeutf8.o(i._GetCharCode) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[e8]">_GetCharSize</a> from gui_uc_encodeutf8.o(i._GetCharSize) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[25]">_GetCharWrap</a> from gui__wrap.o(i._GetCharWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[fa]">_GetDevData</a> from guidrv_flexcolor.o(i._GetDevData) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[f8]">_GetDevFunc</a> from guidrv_flexcolor.o(i._GetDevFunc) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[c3]">_GetDevFunc_Init</a> from guidrv_flexcolor.o(i._GetDevFunc_Init) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[c8]">_GetDevFunc_SetRect</a> from guidrv_flexcolor.o(i._GetDevFunc_SetRect) referenced from guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside)
 <LI><a href="#[c5]">_GetDevFunc_SetRectOutside</a> from guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[c2]">_GetDevFunc_SetSize</a> from guidrv_flexcolor.o(i._GetDevFunc_SetSize) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[c1]">_GetDevFunc_SetVSize</a> from guidrv_flexcolor.o(i._GetDevFunc_SetVSize) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[f9]">_GetDevProp</a> from guidrv_flexcolor.o(i._GetDevProp) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[93]">_GetImageSizes</a> from iconview.o(i._GetImageSizes) referenced from iconview.o(i.ICONVIEW_AddBitmapItem)
 <LI><a href="#[116]">_GetIndexMask</a> from gui_setalpha.o(i._GetIndexMask) referenced from gui_setalpha.o(.constdata)
 <LI><a href="#[143]">_GetIndexMask_0</a> from guicc_0.o(i._GetIndexMask_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[de]">_GetIndexMask_565</a> from guicc_565.o(i._GetIndexMask_565) referenced from guicc_565.o(.constdata)
 <LI><a href="#[12a]">_GetIndexMask_8888</a> from guicc_8888.o(i._GetIndexMask_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[e3]">_GetIndexMask_M565</a> from guicc_m565.o(i._GetIndexMask_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[f4]">_GetPixelIndex</a> from guidrv_flexcolor.o(i._GetPixelIndex) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[c0]">_GetPixel_pPixel</a> from lcd_rle32.o(i._GetPixel_pPixel) referenced from lcd_rle32.o(i._DrawBitmap_RLE32)
 <LI><a href="#[fb]">_GetRect</a> from guidrv_flexcolor.o(i._GetRect) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[ba]">_GetTouchedPage</a> from multipage_skinclassic.o(i._GetTouchedPage) referenced from multipage_skinclassic.o(i._Create)
 <LI><a href="#[24]">_GetWordWrap</a> from gui__wrap.o(i._GetWordWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[115]">_Index2Color</a> from gui_setalpha.o(i._Index2Color) referenced from gui_setalpha.o(.constdata)
 <LI><a href="#[e0]">_Index2ColorBulk</a> from guicc_565.o(i._Index2ColorBulk) referenced 4 times from guicc_565.o(.constdata)
 <LI><a href="#[142]">_Index2Color_0</a> from guicc_0.o(i._Index2Color_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[fc]">_Log2PhysX_X0Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[100]">_Log2PhysX_X0Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[fe]">_Log2PhysX_X0Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[102]">_Log2PhysX_X0Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[fd]">_Log2PhysX_X1Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[101]">_Log2PhysX_X1Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[ff]">_Log2PhysX_X1Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[103]">_Log2PhysX_X1Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[104]">_Log2PhysY_X0Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[108]">_Log2PhysY_X0Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[106]">_Log2PhysY_X0Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[10a]">_Log2PhysY_X0Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[105]">_Log2PhysY_X1Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[109]">_Log2PhysY_X1Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[107]">_Log2PhysY_X1Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[10b]">_Log2PhysY_X1Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[1c]">_Log2VisBuffered</a> from gui_charline.o(i._Log2VisBuffered) referenced 2 times from gui_charline.o(.data)
 <LI><a href="#[87]">_OnExit</a> from gui_task.o(i._OnExit) referenced from gui_task.o(i.GUITASK_Init)
 <LI><a href="#[8d]">_OnExit</a> from gui_timer.o(i._OnExit) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[8e]">_OnExit</a> from gui_core.o(i._OnExit) referenced from gui_core.o(i.GUI__Config)
 <LI><a href="#[90]">_OnExit</a> from gui__alpha.o(i._OnExit) referenced from gui__alpha.o(i.GUI__GetAlphaBuffer)
 <LI><a href="#[95]">_OnExit</a> from lcd_color.o(i._OnExit) referenced from lcd_color.o(i.LCD_InitColors)
 <LI><a href="#[b5]">_OnExit</a> from wm.o(i._OnExit) referenced from wm.o(i.WM_Init)
 <LI><a href="#[cd]">_OnExit</a> from gui_setalpha.o(i._OnExit) referenced from gui_setalpha.o(i._InitAlpha)
 <LI><a href="#[ce]">_OnExit</a> from gui_alloc.o(i._OnExit) referenced from gui_alloc.o(i._InitOnce)
 <LI><a href="#[20]">_OnTouchDefault</a> from button.o(i._OnTouchDefault) referenced 2 times from button.o(.data)
 <LI><a href="#[155]">_Paint</a> from button_skinclassic.o(i._Paint) referenced 10 times from button_skinclassic.o(.constdata)
 <LI><a href="#[3]">_Paint</a> from button_skin.o(i._Paint) referenced 20 times from button_skin.o(.data)
 <LI><a href="#[84]">_ReadData</a> from guidrv_flexcolor_16bpp_c0b16.o(i._ReadData) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[d3]">_ReadPixelCust_16bpp</a> from guidrv_flexcolor.o(i._ReadPixelCust_16bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[d2]">_ReadPixelCust_18bpp</a> from guidrv_flexcolor.o(i._ReadPixelCust_18bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[1]">_ReadPixel_16bpp_B16_I</a> from guidrv_flexcolor_func66709.o(i._ReadPixel_16bpp_B16_I) referenced 2 times from guidrv_flexcolor_func66709.o(.data)
 <LI><a href="#[7d]">_ReadPixel_16bpp_B8</a> from guidrv_flexcolor_func66709.o(i._ReadPixel_16bpp_B8) referenced from guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
 <LI><a href="#[d4]">_ReadRectCust_16bpp</a> from guidrv_flexcolor.o(i._ReadRectCust_16bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[d1]">_ReadRectCust_18bpp</a> from guidrv_flexcolor.o(i._ReadRectCust_18bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[c9]">_ReadRectFromMemdev</a> from gui_setalpha.o(i._ReadRectFromMemdev) referenced from gui_setalpha.o(i._GetLine)
 <LI><a href="#[2]">_ReadRect_16bpp_B16_I</a> from guidrv_flexcolor_func66709.o(i._ReadRect_16bpp_B16_I) referenced 2 times from guidrv_flexcolor_func66709.o(.data)
 <LI><a href="#[7e]">_ReadRect_16bpp_B8</a> from guidrv_flexcolor_func66709.o(i._ReadRect_16bpp_B8) referenced from guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
 <LI><a href="#[1f]">_Rect2TextRect</a> from lcd_rotatecw.o(i._Rect2TextRect) referenced 2 times from lcd_rotatecw.o(.data)
 <LI><a href="#[12e]">_SetBkColor</a> from lcd.o(i._SetBkColor) referenced from lcd.o(.constdata)
 <LI><a href="#[12d]">_SetColor</a> from lcd.o(i._SetColor) referenced from lcd.o(.constdata)
 <LI><a href="#[c4]">_SetDevFunc</a> from guidrv_flexcolor.o(i._SetDevFunc) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[12f]">_SetDrawMode</a> from lcd.o(i._SetDrawMode) referenced from lcd.o(.constdata)
 <LI><a href="#[7f]">_SetInterface</a> from guidrv_flexcolor_func66709.o(i._SetInterface) referenced from guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
 <LI><a href="#[f7]">_SetOrg</a> from guidrv_flexcolor.o(i._SetOrg) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[7c]">_SetOrientation</a> from guidrv_flexcolor_func66709.o(i._SetOrientation) referenced from guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
 <LI><a href="#[7a]">_SetPhysRAMAddr</a> from guidrv_flexcolor_func66709.o(i._SetPhysRAMAddr) referenced from guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
 <LI><a href="#[f5]">_SetPixelIndex</a> from guidrv_flexcolor.o(i._SetPixelIndex) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[7b]">_SetRect</a> from guidrv_flexcolor_func66709.o(i._SetRect) referenced from guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
 <LI><a href="#[d5]">_SetReg_B16</a> from guidrv_flexcolor_func66709.o(i._SetReg_B16) referenced from guidrv_flexcolor_func66709.o(i._SetInterface)
 <LI><a href="#[d7]">_SetReg_B8</a> from guidrv_flexcolor_func66709.o(i._SetReg_B8) referenced from guidrv_flexcolor_func66709.o(i._SetInterface)
 <LI><a href="#[78]">_WriteByte2File</a> from main.o(i._WriteByte2File) referenced from main.o(i.AppTaskShot)
 <LI><a href="#[85]">_WriteData</a> from guidrv_flexcolor_16bpp_c0b16.o(i._WriteData) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[d6]">_WritePara_B16</a> from guidrv_flexcolor_func66709.o(i._WritePara_B16) referenced from guidrv_flexcolor_func66709.o(i._SetInterface)
 <LI><a href="#[d8]">_WritePara_B8</a> from guidrv_flexcolor_func66709.o(i._WritePara_B8) referenced from guidrv_flexcolor_func66709.o(i._SetInterface)
 <LI><a href="#[f6]">_XorPixel</a> from guidrv_flexcolor.o(i._XorPixel) referenced 4 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[71]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[b2]">_cbBkWindow</a> from app.o(i._cbBkWindow) referenced from app.o(i.UserAPP)
 <LI><a href="#[bc]">_cbGetData</a> from app.o(i._cbGetData) referenced from app.o(i._CreateXBF)
 <LI><a href="#[b7]">_cbInvalidateOne</a> from wm_bringtotop.o(i._cbInvalidateOne) referenced from wm_bringtotop.o(i._BringToTop)
 <LI><a href="#[79]">_cbMidWin</a> from app.o(i._cbMidWin) referenced from app.o(i.CreateMidWin)
 <LI><a href="#[b6]">_cbPaintMemDev</a> from wm.o(i._cbPaintMemDev) referenced from wm.o(i.WM__Paint)
 <LI><a href="#[b3]">_cbTimer</a> from wm_timer.o(i._cbTimer) referenced from wm_timer.o(i.WM_CreateTimer)
 <LI><a href="#[da]">_sputc</a> from printf1.o(i._sputc) referenced from printf1.o(i.__0sprintf$1)
 <LI><a href="#[b4]">cbBackWin</a> from wm.o(i.cbBackWin) referenced from wm.o(i.WM_Init)
 <LI><a href="#[d9]">fputc</a> from bsp_usart1.o(i.fputc) referenced from printf1.o(i.__0printf$1)
 <LI><a href="#[6f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[71]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[4db]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[16d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[172]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4dc]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[4dd]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[4de]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[4df]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[4e0]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[4e1]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[29]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4e2]"></a>CPU_IntDis</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[4e3]"></a>CPU_IntEn</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[355]"></a>CPU_SR_Save</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdate
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSuspend
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSemPost
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskResume
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatReset
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemPost
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_IdleTask
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
</UL>

<P><STRONG><a name="[356]"></a>CPU_SR_Restore</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdate
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSuspend
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSemPost
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskResume
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatReset
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemPost
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_IdleTask
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
</UL>

<P><STRONG><a name="[4e4]"></a>CPU_WaitForInt</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[4e5]"></a>CPU_WaitForExcept</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[380]"></a>CPU_CntLeadZeros</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioGetHighest
</UL>

<P><STRONG><a name="[4e6]"></a>CPU_CntTrailZeros</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[4e7]"></a>CPU_RevBits</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, cpu_a.o(.text), UNUSED)

<P><STRONG><a name="[4e8]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[21a]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[20c]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__SetLog2Phys
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
</UL>

<P><STRONG><a name="[4a3]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
</UL>

<P><STRONG><a name="[4e9]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[4ea]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[170]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[4eb]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4ec]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[16f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1bb]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_FSMC_Config
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX__GetButtonSize
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
</UL>

<P><STRONG><a name="[4ed]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[171]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[26f]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ErrorOut1
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>

<P><STRONG><a name="[2df]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[30a]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>

<P><STRONG><a name="[4ee]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[4b1]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[16e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[4ef]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4f0]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[4f1]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[35e]"></a>OSStartHighRdy</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(CODE))
<BR><BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
</UL>

<P><STRONG><a name="[31]"></a>OS_CPU_PendSVHandler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(CODE))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[190]"></a>BSP_CPU_ClkFreq</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, bsp.o(i.BSP_CPU_ClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BSP_CPU_ClkFreq &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrInit
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Tick_Init
</UL>

<P><STRONG><a name="[180]"></a>BSP_Init</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, bsp.o(i.BSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = BSP_Init &rArr; GUI_Init &rArr; GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_Init
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCreateFlags
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key2_GPIO_Config
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key1_GPIO_Config
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Init
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Init
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_NVIC_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[182]"></a>BSP_Tick_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp.o(i.BSP_Tick_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BSP_Tick_Init &rArr; BSP_CPU_ClkFreq &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CPU_ClkFreq
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickInit
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[aa]"></a>BUTTON_DrawSkinFlex</STRONG> (Thumb, 562 bytes, Stack size 56 bytes, button_skinflex.o(i.BUTTON_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = BUTTON_DrawSkinFlex &rArr; GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.UserAPP)
</UL>
<P><STRONG><a name="[3d6]"></a>BUTTON_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, button_skin.o(i.BUTTON_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[197]"></a>Beep_Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, beep.o(i.Beep_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Beep_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[2d]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>CHECKBOX_DrawSkinFlex</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, checkbox_skinflex.o(i.CHECKBOX_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_DrawSkinFlex &rArr; _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.UserAPP)
</UL>
<P><STRONG><a name="[1b6]"></a>CHECKBOX_GetSkinFlexButtonSize</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, checkbox_skinflex.o(i.CHECKBOX_GetSkinFlexButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = CHECKBOX_GetSkinFlexButtonSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[3d7]"></a>CHECKBOX_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, checkbox_skin.o(i.CHECKBOX_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[21]"></a>CHECKBOX__GetButtonSize</STRONG> (Thumb, 32 bytes, Stack size 40 bytes, checkbox.o(i.CHECKBOX__GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CHECKBOX__GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox.o(.data)
</UL>
<P><STRONG><a name="[181]"></a>CPU_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpu_core.o(i.CPU_Init))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[1be]"></a>CPU_TS_TmrFreqSet</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cpu_core.o(i.CPU_TS_TmrFreqSet), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrInit
</UL>

<P><STRONG><a name="[1bd]"></a>CPU_TS_TmrInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bsp.o(i.CPU_TS_TmrInit), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrFreqSet
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CPU_ClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_Init
</UL>

<P><STRONG><a name="[35b]"></a>CPU_TS_TmrRd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bsp.o(i.CPU_TS_TmrRd))
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdate
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskInitTCB
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPost
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSwHook
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
</UL>

<P><STRONG><a name="[3f1]"></a>DIALOG_GetBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dialog.o(i.DIALOG_GetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
</UL>

<P><STRONG><a name="[ac]"></a>DROPDOWN_DrawSkinFlex</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, dropdown_skinflex.o(i.DROPDOWN_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = DROPDOWN_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.UserAPP)
</UL>
<P><STRONG><a name="[3d8]"></a>DROPDOWN_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dropdown_skin.o(i.DROPDOWN_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[1d1]"></a>DROPDOWN__GetpItemLocked</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, dropdown.o(i.DROPDOWN__GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DROPDOWN__GetpItemLocked &rArr; GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[30]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>FRAMEWIN_DrawSkinFlex</STRONG> (Thumb, 888 bytes, Stack size 104 bytes, framewin_skinflex.o(i.FRAMEWIN_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_DrawSkinFlex &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>
<BR>[Address Reference Count : 2]<UL><LI> app.o(i.UserAPP)
<LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[1d3]"></a>FRAMEWIN_GetActive</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, framewin_get.o(i.FRAMEWIN_GetActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_GetActive &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[b9]"></a>FRAMEWIN_OwnerDraw</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, framewin_skinclassic.o(i.FRAMEWIN_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_OwnerDraw &rArr; WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skinclassic.o(i._Create)
</UL>
<P><STRONG><a name="[3d5]"></a>FRAMEWIN_SetDefaultSkin</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, framewin_skin.o(i.FRAMEWIN_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[1db]"></a>FRAMEWIN_SetOwnerDraw</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, framewin_setownerdraw.o(i.FRAMEWIN_SetOwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN_SetOwnerDraw &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
</UL>

<P><STRONG><a name="[1dd]"></a>FRAMEWIN__CalcPositions</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, framewin.o(i.FRAMEWIN__CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__CalcPositions &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetFirstChild &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeY
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetWindowSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1e0]"></a>FRAMEWIN__CalcTitleHeight</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, framewin.o(i.FRAMEWIN__CalcTitleHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FRAMEWIN__CalcTitleHeight
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[22]"></a>FRAMEWIN__GetBorderSize</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, framewin.o(i.FRAMEWIN__GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FRAMEWIN__GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin.o(.data)
</UL>
<P><STRONG><a name="[1e2]"></a>FRAMEWIN__GetTitleLimits</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, framewin.o(i.FRAMEWIN__GetTitleLimits))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = FRAMEWIN__GetTitleLimits &rArr; WM_GetFirstChild &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[31a]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMCmd))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_FSMC_Config
</UL>

<P><STRONG><a name="[319]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, stm32f10x_fsmc.o(i.FSMC_NORSRAMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FSMC_NORSRAMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_FSMC_Config
</UL>

<P><STRONG><a name="[1e6]"></a>FUN_ICON000Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON000Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON000Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
</UL>

<P><STRONG><a name="[1e7]"></a>FUN_ICON001Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON001Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON001Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
</UL>

<P><STRONG><a name="[1e8]"></a>FUN_ICON100Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON100Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON100Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1e9]"></a>FUN_ICON101Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON101Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON101Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1ea]"></a>FUN_ICON102Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON102Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON102Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1eb]"></a>FUN_ICON103Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON103Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON103Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1ec]"></a>FUN_ICON104Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON104Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON104Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1ed]"></a>FUN_ICON105Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON105Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON105Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1ee]"></a>FUN_ICON106Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON106Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON106Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1ef]"></a>FUN_ICON107Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON107Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON107Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1f0]"></a>FUN_ICON108Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON108Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON108Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1f1]"></a>FUN_ICON109Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON109Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON109Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1f2]"></a>FUN_ICON110Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON110Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON110Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1f3]"></a>FUN_ICON111Clicked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app.o(i.FUN_ICON111Clicked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FUN_ICON111Clicked &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
</UL>

<P><STRONG><a name="[1f4]"></a>GL_DrawBitmap</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, gui_drawbitmap.o(i.GL_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>

<P><STRONG><a name="[1f7]"></a>GL_DrawLine</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_drawline.o(i.GL_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>

<P><STRONG><a name="[1f9]"></a>GL_DrawLine1Ex</STRONG> (Thumb, 456 bytes, Stack size 84 bytes, gui_drawline.o(i.GL_DrawLine1Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLineColor
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Abs
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[1f8]"></a>GL_DrawLineEx</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, gui_drawline.o(i.GL_DrawLineEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan2
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[1fb]"></a>GL_DrawPoint</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_drawpoint.o(i.GL_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>

<P><STRONG><a name="[202]"></a>GL_FillCircle</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, gui_circ.o(i.GL_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>

<P><STRONG><a name="[200]"></a>GL_FillPolygon</STRONG> (Thumb, 466 bytes, Stack size 64 bytes, gui_fillpolygon.o(i.GL_FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GL_FillPolygon &rArr; _Add
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[204]"></a>GL_SetDefault</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_setdefault.o(i.GL_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GL_SetDefault &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>

<P><STRONG><a name="[1b2]"></a>GPIO_Init</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Reset
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_CHx_Cap_Init
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_initialize
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_GPIO_SPI_Config
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_GPIO_Config
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key2_GPIO_Config
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key1_GPIO_Config
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Init
</UL>

<P><STRONG><a name="[304]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPinStateOfKey2
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPinStateOfKey1
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_ReadAdc_Fliter
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_ReadCMD
</UL>

<P><STRONG><a name="[18c]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskUpdate
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Reset
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadID
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_WriteCMD
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_ReadCMD
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_GPIO_SPI_Config
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Rst
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Init
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Explain
</UL>

<P><STRONG><a name="[18b]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskUpdate
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_initialize
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadID
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_WriteCMD
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_ReadCMD
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Rst
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_GPIO_Config
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
</UL>

<P><STRONG><a name="[209]"></a>GUIDRV_FlexColor_Config</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = GUIDRV_FlexColor_Config &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[20b]"></a>GUIDRV_FlexColor_SetFunc</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor_SetFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = GUIDRV_FlexColor_SetFunc &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[9b]"></a>GUIDRV_FlexColor_SetFunc66709</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = GUIDRV_FlexColor_SetFunc66709 &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[9a]"></a>GUIDRV_FlexColor_SetMode16bppC0B16</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = GUIDRV_FlexColor_SetMode16bppC0B16 &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[82]"></a>GUIDRV_FlexColor__GetPixelIndexNoCache</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__GetPixelIndexNoCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUIDRV_FlexColor__GetPixelIndexNoCache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[20a]"></a>GUIDRV_FlexColor__InitOnce</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetMode16bppC0B16
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc66709
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_Config
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_SetVSize
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_SetSize
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
</UL>

<P><STRONG><a name="[86]"></a>GUIDRV_FlexColor__SetLog2Phys</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetLog2Phys))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUIDRV_FlexColor__SetLog2Phys &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i.GUIDRV_FlexColor__InitOnce)
</UL>
<P><STRONG><a name="[83]"></a>GUIDRV_FlexColor__SetPixelIndexNoCache</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetPixelIndexNoCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUIDRV_FlexColor__SetPixelIndexNoCache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[110]"></a>GUIMONO_DispChar</STRONG> (Thumb, 304 bytes, Stack size 104 bytes, gui_charm.o(i.GUIMONO_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_IsInFont))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[10c]"></a>GUIPROP_DispChar</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, gui_charp.o(i.GUIPROP_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = GUIPROP_DispChar &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 5]<UL><LI> f08_ascii.o(.constdata)
<LI> f10_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f08_1.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, gui_charp.o(i.GUIPROP_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 5]<UL><LI> f08_ascii.o(.constdata)
<LI> f10_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f08_1.o(.constdata)
</UL>
<P><STRONG><a name="[10e]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP_GetFontInfo))
<BR>[Address Reference Count : 5]<UL><LI> f08_ascii.o(.constdata)
<LI> f10_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f08_1.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_charp.o(i.GUIPROP_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 5]<UL><LI> f08_ascii.o(.constdata)
<LI> f10_ascii.o(.constdata)
<LI> f13b_ascii.o(.constdata)
<LI> f13_1.o(.constdata)
<LI> f08_1.o(.constdata)
</UL>
<P><STRONG><a name="[211]"></a>GUIPROP__FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[214]"></a>GUITASK_CopyContext</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui_task.o(i.GUITASK_CopyContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUITASK_CopyContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[215]"></a>GUITASK_Init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gui_task.o(i.GUITASK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = GUITASK_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[218]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gui_alloc_allocinit.o(i.GUI_ALLOC_AllocInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocInit &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[219]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[21c]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_alloc_alloczero.o(i.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[2ea]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[21d]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
</UL>

<P><STRONG><a name="[243]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[220]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[20d]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>

<P><STRONG><a name="[224]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_GetMaxSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[227]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_GetSize))
<BR><BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
</UL>

<P><STRONG><a name="[24d]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[1a7]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_LockH))
<BR><BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_GetSel
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_GetFont
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetTextRect
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPageSize
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexFromPos
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AlignImage
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextWidth
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonSize
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTouchedPage
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[226]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gui_realloc.o(i.GUI_ALLOC_Realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[228]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_RequestSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_RequestSize &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[2eb]"></a>GUI_ALLOC_SetAvBlockSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_SetAvBlockSize))
<BR><BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[24f]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[1a9]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_GetSel
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_GetFont
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetTextRect
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPageSize
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexFromPos
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AlignImage
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetBorderSize
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextWidth
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonSize
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTouchedPage
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBorderSize
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[225]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveFromLinList
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>

<P><STRONG><a name="[229]"></a>GUI_ARRAY_AddItem</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, gui_array.o(i.GUI_ARRAY_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
</UL>

<P><STRONG><a name="[22a]"></a>GUI_ARRAY_Create</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_array.o(i.GUI_ARRAY_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
</UL>

<P><STRONG><a name="[22b]"></a>GUI_ARRAY_Delete</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gui_array.o(i.GUI_ARRAY_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[22c]"></a>GUI_ARRAY_GetNumItems</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPageSize
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexFromPos
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextWidth
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTouchedPage
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1d2]"></a>GUI_ARRAY_GethItem</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
</UL>

<P><STRONG><a name="[22e]"></a>GUI_ARRAY_GetpItemLocked</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPageSize
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[22d]"></a>GUI_ARRAY__GethItem</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY__GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
</UL>

<P><STRONG><a name="[22f]"></a>GUI_ARRAY__GetpItemLocked</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_array.o(i.GUI_ARRAY__GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>

<P><STRONG><a name="[2ef]"></a>GUI_AddHex</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_addhex.o(i.GUI_AddHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_AddHex
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AddSpaceHex
</UL>

<P><STRONG><a name="[17e]"></a>GUI_BMP_Serialize</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, gui_bmp_serialize.o(i.GUI_BMP_Serialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = GUI_BMP_Serialize &rArr; GUI_BMP_SerializeEx &rArr; _SerializeEx &rArr; GUI_Index2Color &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_SerializeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShot
</UL>

<P><STRONG><a name="[232]"></a>GUI_BMP_SerializeEx</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, gui_bmp_serialize.o(i.GUI_BMP_SerializeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = GUI_BMP_SerializeEx &rArr; _SerializeEx &rArr; GUI_Index2Color &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SerializeEx
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_Serialize
</UL>

<P><STRONG><a name="[235]"></a>GUI_CURSOR_SetPositionEx</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gui_curs1.o(i.GUI_CURSOR_SetPositionEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[459]"></a>GUI_CalcColorDist</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gui_calccolordist.o(i.GUI_CalcColorDist))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_CalcColorDist
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[239]"></a>GUI_Clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_Clear &rArr; GUI_GotoXY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPhysValues
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Explain
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[23b]"></a>GUI_ClearRect</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, gui_core.o(i.GUI_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_ClearRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[23e]"></a>GUI_ClearRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_clearrectex.o(i.GUI_ClearRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_ClearRectEx &rArr; GUI_ClearRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[23f]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[240]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[242]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[241]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[244]"></a>GUI_DEVICE_LinkDevices</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_device.o(i.GUI_DEVICE_LinkDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_DEVICE_LinkDevices &rArr; GUI_DEVICE_Link
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[245]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Unlink))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[247]"></a>GUI_DEVICE_UnlinkTaskDevices</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_UnlinkTaskDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_DEVICE_UnlinkTaskDevices
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[2c6]"></a>GUI_DEVICE__GetpDevice</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDevice))
<BR><BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[297]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[1aa]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, gui_draw.o(i.GUI_DRAW__Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[248]"></a>GUI_DRAW__GetXSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[249]"></a>GUI_DRAW__GetYSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[24a]"></a>GUI_Delay</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gui_time.o(i.GUI_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 748 + Unknown Stack Size
<LI>Call Chain = GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WaitForPressedState
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Explain
</UL>

<P><STRONG><a name="[250]"></a>GUI_DispString</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, gui_dispstring.o(i.GUI_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
</UL>

<P><STRONG><a name="[257]"></a>GUI_DispStringAt</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_dispstringat.o(i.GUI_DispStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[258]"></a>GUI_DispStringHCenterAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_dispstringhcenter.o(i.GUI_DispStringHCenterAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Explain
</UL>

<P><STRONG><a name="[1af]"></a>GUI_DispStringInRect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_dispstringinrect.o(i.GUI_DispStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPhysValues
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispStringCentered
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[25a]"></a>GUI_DispStringInRectEx</STRONG> (Thumb, 126 bytes, Stack size 48 bytes, gui_dispstringinrectex.o(i.GUI_DispStringInRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRectEx &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRotation
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
</UL>

<P><STRONG><a name="[259]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, gui_dispstringinrect.o(i.GUI_DispStringInRectMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
</UL>

<P><STRONG><a name="[25f]"></a>GUI_DispStringInRectWrap</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, gui_dispstringinrectwrap.o(i.GUI_DispStringInRectWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[264]"></a>GUI_DrawBitmap</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gui_drawbitmap.o(i.GUI_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawStreamedBitmap
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[265]"></a>GUI_DrawFocusRect</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, gui_drawfocusrect.o(i.GUI_DrawFocusRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_DrawFocusRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[a3]"></a>GUI_DrawGradientH</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, gui_drawgradient.o(i.GUI_DrawGradientH))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[a6]"></a>GUI_DrawGradientV</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, gui_drawgradient.o(i.GUI_DrawGradientV))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[1a3]"></a>GUI_DrawHLine</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, gui_drawhline.o(i.GUI_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[268]"></a>GUI_DrawLine</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_drawline.o(i.GUI_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
</UL>

<P><STRONG><a name="[1d5]"></a>GUI_DrawPixel</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui_drawpixel.o(i.GUI_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_DrawPixel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[1a6]"></a>GUI_DrawRect</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, gui_2dlib.o(i.GUI_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_DrawRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>

<P><STRONG><a name="[f]"></a>GUI_DrawStreamedBitmap</STRONG> (Thumb, 64 bytes, Stack size 72 bytes, gui_stream.o(i.GUI_DrawStreamedBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = GUI_DrawStreamedBitmap &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReadHeaderFromStream
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CreateBitmapFromStream
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(.data)
</UL>
<P><STRONG><a name="[1a4]"></a>GUI_DrawVLine</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_drawvline.o(i.GUI_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_DrawVLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[26b]"></a>GUI_ErrorOut</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_errorout.o(i.GUI_ErrorOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_ErrorOut
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ErrorOut
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ErrorOut1
</UL>

<P><STRONG><a name="[26d]"></a>GUI_ErrorOut1</STRONG> (Thumb, 64 bytes, Stack size 128 bytes, gui_errorout.o(i.GUI_ErrorOut1))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GUI_ErrorOut1 &rArr; GUI__AddSpaceHex &rArr; GUI_AddHex
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AddSpaceHex
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ErrorOut
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyString
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[24c]"></a>GUI_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_exec.o(i.GUI_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 724 + Unknown Stack Size
<LI>Call Chain = GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[271]"></a>GUI_Exec1</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_exec.o(i.GUI_Exec1))
<BR><BR>[Stack]<UL><LI>Max Depth = 716 + Unknown Stack Size
<LI>Call Chain = GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[273]"></a>GUI_FillCircle</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_circ.o(i.GUI_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_FillCircle &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPhysValues
</UL>

<P><STRONG><a name="[1a5]"></a>GUI_FillRect</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui_fillrect.o(i.GUI_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_FillRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1d6]"></a>GUI_FillRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_fillrectex.o(i.GUI_FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_FillRectEx &rArr; GUI_FillRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[274]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_getbitmappixelindex.o(i.GUI_GetBitmapPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkPixel
</UL>

<P><STRONG><a name="[275]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, gui_getbitmappixelindex.o(i.GUI_GetBitmapPixelIndexEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>

<P><STRONG><a name="[2f6]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[213]"></a>GUI_GetBkColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_GetBkColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispChar
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[278]"></a>GUI_GetCharDistX</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[279]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_char.o(i.GUI_GetCharDistXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[1ac]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getclientrect.o(i.GUI_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[212]"></a>GUI_GetColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispChar
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
</UL>

<P><STRONG><a name="[236]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_GetCursorLayer))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[251]"></a>GUI_GetFontDistY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetFontDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontDistY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
</UL>

<P><STRONG><a name="[27b]"></a>GUI_GetFontInfo</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_getfontinfo.o(i.GUI_GetFontInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontInfo &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[27c]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_getfontsizey.o(i.GUI_GetFontSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPhysValues
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[27e]"></a>GUI_GetLayerPosEx</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_GetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPosEx
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[280]"></a>GUI_GetOrg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_getorg.o(i.GUI_GetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[282]"></a>GUI_GetStringDistX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_getstringdistx.o(i.GUI_GetStringDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPageSize
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CalcTextRect
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[284]"></a>GUI_GetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_time.o(i.GUI_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_GetTime &rArr; GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WaitForPressedState
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Explain
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[252]"></a>GUI_GetYAdjust</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetYAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_GetYAdjust &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1e3]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_getysizeoffont.o(i.GUI_GetYSizeOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetTextRect
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustRect
</UL>

<P><STRONG><a name="[4ad]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[2f7]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[23a]"></a>GUI_GotoXY</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_goto.o(i.GUI_GotoXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_GotoXY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoY
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoX
</UL>
<BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
</UL>

<P><STRONG><a name="[287]"></a>GUI_Index2Color</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_index2color.o(i.GUI_Index2Color))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_Index2Color &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SerializeEx
</UL>

<P><STRONG><a name="[19c]"></a>GUI_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = GUI_Init &rArr; GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[1b9]"></a>GUI_Lock</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, gui_task.o(i.GUI_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 164 + Unknown Stack Size
<LI>Call Chain = GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_UnlinkTaskDevices
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSel
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_GetSel
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Index2Color
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SerializeEx
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_GetFont
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocussedWindow
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawStreamedBitmap
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRotation
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[290]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guidev_clear.o(i.GUI_MEMDEV_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Clear &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[291]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[292]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCDAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[296]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, guidev.o(i.GUI_MEMDEV_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[299]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[29c]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 282 bytes, Stack size 64 bytes, guidev_banding.o(i.GUI_MEMDEV_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Min
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[2a3]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[2a5]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, guidev_getdataptr.o(i.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[2a6]"></a>GUI_MEMDEV_GetXPos</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getpos.o(i.GUI_MEMDEV_GetXPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetXPos &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
</UL>

<P><STRONG><a name="[2a7]"></a>GUI_MEMDEV_GetXSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getxsize.o(i.GUI_MEMDEV_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetXSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
</UL>

<P><STRONG><a name="[2a8]"></a>GUI_MEMDEV_GetYPos</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getpos.o(i.GUI_MEMDEV_GetYPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetYPos &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
</UL>

<P><STRONG><a name="[2a0]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getysize.o(i.GUI_MEMDEV_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[cf]"></a>GUI_MEMDEV_Paint1Static</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Paint1Static &rArr; _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[2a1]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_reduceysize.o(i.GUI_MEMDEV_ReduceYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_ReduceYSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[295]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[2a2]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, guidev_setorg.o(i.GUI_MEMDEV_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_SetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[2aa]"></a>GUI_MEMDEV_Write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_write.o(i.GUI_MEMDEV_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Write &rArr; GUI_MEMDEV_WriteAt &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[2ae]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, guidev_write.o(i.GUI_MEMDEV_WriteAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_WriteAt &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
</UL>

<P><STRONG><a name="[298]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 230 bytes, Stack size 64 bytes, guidev.o(i.GUI_MEMDEV__CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>

<P><STRONG><a name="[2c7]"></a>GUI_MEMDEV__SetAlphaCallback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidev_banding.o(i.GUI_MEMDEV__SetAlphaCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[c7]"></a>GUI_MEMDEV__WriteToActiveAlpha</STRONG> (Thumb, 266 bytes, Stack size 120 bytes, guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[2af]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV__WriteToActiveAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[c6]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[42e]"></a>GUI_MergeRect</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui_mergerect.o(i.GUI_MergeRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[1ad]"></a>GUI_MoveRect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_moverect.o(i.GUI_MoveRect))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[2b6]"></a>GUI_PID_GetState</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gui_pid.o(i.GUI_PID_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_PID_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[416]"></a>GUI_PID_IsEmpty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_pid.o(i.GUI_PID_IsEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[2b8]"></a>GUI_PID_StoreState</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_pid.o(i.GUI_PID_StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>

<P><STRONG><a name="[2bb]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_onkey.o(i.GUI_PollKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = GUI_PollKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[2be]"></a>GUI_ReadRectEx</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lcd_readrect.o(i.GUI_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ReadRectEx &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[3ee]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_rectsintersect.o(i.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[2c0]"></a>GUI_RestoreContext</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_savecontext.o(i.GUI_RestoreContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_RestoreContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[238]"></a>GUI_SPRITE_SetPosition</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[2c2]"></a>GUI_SaveContext_W</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_savecontext.o(i.GUI_SaveContext_W))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[29a]"></a>GUI_SelectLCD</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_selectlcd.o(i.GUI_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[293]"></a>GUI_SelectLayer</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SelectLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[2c4]"></a>GUI_SetAlpha</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gui_setalpha.o(i.GUI_SetAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = GUI_SetAlpha &rArr; _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDevice
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__SetAlphaCallback
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i.GUI_SetAlpha)
</UL>
<P><STRONG><a name="[205]"></a>GUI_SetBkColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_setcolor.o(i.GUI_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_SetBkColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[261]"></a>GUI_SetClipRect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_setcliprect.o(i.GUI_SetClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_SetClipRect &rArr; WM_SetUserClipRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[1a2]"></a>GUI_SetColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_setcolor.o(i.GUI_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPhysValues
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispChar
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspV
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGraspH
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>

<P><STRONG><a name="[2ec]"></a>GUI_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_core.o(i.GUI_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[1f5]"></a>GUI_SetDrawMode</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_setdrawmode.o(i.GUI_SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[1ab]"></a>GUI_SetFont</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_setfont.o(i.GUI_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF_CreateFont
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPageSize
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[237]"></a>GUI_SetLayerPosEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SetLayerPosEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPosEx
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
</UL>

<P><STRONG><a name="[208]"></a>GUI_SetLineStyle</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_setlinestyle.o(i.GUI_SetLineStyle))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SetLineStyle &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[28c]"></a>GUI_SetOrg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_setorg.o(i.GUI_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SetOrg &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[206]"></a>GUI_SetPenSize</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_pen.o(i.GUI_SetPenSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SetPenSize &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[207]"></a>GUI_SetTextAlign</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_settextalign.o(i.GUI_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SetTextAlign &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[1ae]"></a>GUI_SetTextMode</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_settextmode.o(i.GUI_SetTextMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_SetTextMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2ba]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[2c9]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(i.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
</UL>

<P><STRONG><a name="[2ca]"></a>GUI_TIMER_Create</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, gui_timer.o(i.GUI_TIMER_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[2cc]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_timer.o(i.GUI_TIMER_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>

<P><STRONG><a name="[8c]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 112 bytes, Stack size 56 bytes, gui_timer.o(i.GUI_TIMER_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Exec &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[2cf]"></a>GUI_TIMER_GetFlag</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_GetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_GetFlag &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[2d0]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Restart &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[2d1]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_SetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_SetPeriod &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[2d2]"></a>GUI_TIMER__GetFirstTimer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetFirstTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetFirstTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[2d3]"></a>GUI_TIMER__GetNextTimerLin</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetNextTimerLin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetNextTimerLin
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[19f]"></a>GUI_TOUCH_Calibrate</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_Calibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_TOUCH_Calibrate &rArr; LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetMinMax
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Log2Phys
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[184]"></a>GUI_TOUCH_Exec</STRONG> (Thumb, 336 bytes, Stack size 32 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GUI_TOUCH_Exec &rArr; GUI_TOUCH_X_MeasureY &rArr; XPT2046_ReadAdc_Fliter &rArr; XPT2046_WriteCMD &rArr; XPT2046_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateY
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_ActivateX
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreUnstable
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetMinMax
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[484]"></a>GUI_TOUCH_GetState</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_touch.o(i.GUI_TOUCH_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_TOUCH_GetState
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WaitForPressedState
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Explain
</UL>

<P><STRONG><a name="[493]"></a>GUI_TOUCH_GetxPhys</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_GetxPhys))
<BR><BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPhysValues
</UL>

<P><STRONG><a name="[494]"></a>GUI_TOUCH_GetyPhys</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_GetyPhys))
<BR><BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPhysValues
</UL>

<P><STRONG><a name="[338]"></a>GUI_TOUCH_SetOrientation</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_touch_driveranalog.o(i.GUI_TOUCH_SetOrientation))
<BR><BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2dd]"></a>GUI_TOUCH_StoreState</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_touch_storestate.o(i.GUI_TOUCH_StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_TOUCH_StoreState &rArr; GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreStateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreUnstable
</UL>

<P><STRONG><a name="[2de]"></a>GUI_TOUCH_StoreStateEx</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_touch.o(i.GUI_TOUCH_StoreStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreState
</UL>

<P><STRONG><a name="[2e0]"></a>GUI_TOUCH_StoreUnstable</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_touch_storeunstable.o(i.GUI_TOUCH_StoreUnstable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_TOUCH_StoreUnstable &rArr; GUI_TOUCH_StoreState &rArr; GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreState
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreUnstable
</UL>

<P><STRONG><a name="[2d9]"></a>GUI_TOUCH_X_ActivateX</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch_analog.o(i.GUI_TOUCH_X_ActivateX))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[2db]"></a>GUI_TOUCH_X_ActivateY</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_touch_analog.o(i.GUI_TOUCH_X_ActivateY))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[2d8]"></a>GUI_TOUCH_X_MeasureX</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_x_touch_analog.o(i.GUI_TOUCH_X_MeasureX))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_TOUCH_X_MeasureX &rArr; XPT2046_ReadAdc_Fliter &rArr; XPT2046_WriteCMD &rArr; XPT2046_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_ReadAdc_Fliter
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[2da]"></a>GUI_TOUCH_X_MeasureY</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_x_touch_analog.o(i.GUI_TOUCH_X_MeasureY))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_TOUCH_X_MeasureY &rArr; XPT2046_ReadAdc_Fliter &rArr; XPT2046_WriteCMD &rArr; XPT2046_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_ReadAdc_Fliter
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[2e2]"></a>GUI_UC_SetEncodeUTF8</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_uc_encodeutf8.o(i.GUI_UC_SetEncodeUTF8))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = GUI_UC_SetEncodeUTF8 &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[2fe]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__GetCharCodeInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
</UL>

<P><STRONG><a name="[256]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumChars2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[475]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidev_usage.o(i.GUI_USAGE_AddRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[2b0]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[29b]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guidev_usage.o(i.GUI_USAGE_DecUseCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[1ba]"></a>GUI_Unlock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_task.o(i.GUI_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_SemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSel
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_GetSel
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Index2Color
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SerializeEx
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_GetFont
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocussedWindow
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawStreamedBitmap
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_GetActive
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetRotation
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetNextSibling
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[260]"></a>GUI_WrapGetNumLines</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gui_dispstringinrectwrap.o(i.GUI_WrapGetNumLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[2e4]"></a>GUI_XBF_CreateFont</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, gui_xbf.o(i.GUI_XBF_CreateFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = GUI_XBF_CreateFont &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
</UL>
<BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateXBF
</UL>

<P><STRONG><a name="[ec]"></a>GUI_XBF__GetCharDistX</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_xbf.o(i.GUI_XBF__GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_XBF__GetCharDistX &rArr; GUI_XBF__GetOff
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF__GetOff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_xbf_prop.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>GUI_XBF__GetFontInfo</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_xbf.o(i.GUI_XBF__GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> gui_xbf_prop.o(.constdata)
</UL>
<P><STRONG><a name="[2e7]"></a>GUI_XBF__GetOff</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gui_xbf.o(i.GUI_XBF__GetOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_XBF__GetOff
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF__IsInFont
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF__GetCharDistX
</UL>

<P><STRONG><a name="[2e8]"></a>GUI_XBF__GetOffAndSize</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, gui_xbf.o(i.GUI_XBF__GetOffAndSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_XBF__GetOffAndSize
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read32
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispChar
</UL>

<P><STRONG><a name="[ee]"></a>GUI_XBF__IsInFont</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_xbf.o(i.GUI_XBF__IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_XBF__IsInFont &rArr; GUI_XBF__GetOff
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF__GetOff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_xbf_prop.o(.constdata)
</UL>
<P><STRONG><a name="[2e9]"></a>GUI_X_Config</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, guiconf.o(i.GUI_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_X_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_SetAvBlockSize
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefaultFont
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[24e]"></a>GUI_X_Delay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = GUI_X_Delay &rArr; OSTimeDly &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ExecIdle
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[26c]"></a>GUI_X_ErrorOut</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x_ucos.o(i.GUI_X_ErrorOut))
<BR><BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ErrorOut
</UL>

<P><STRONG><a name="[1d]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_x_ucos.o(i.GUI_X_ExecIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = GUI_X_ExecIdle &rArr; GUI_X_Delay &rArr; OSTimeDly &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_waitevent.o(.data)
</UL>
<P><STRONG><a name="[28e]"></a>GUI_X_GetTaskId</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x_ucos.o(i.GUI_X_GetTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[24b]"></a>GUI_X_GetTime</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>

<P><STRONG><a name="[289]"></a>GUI_X_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = GUI_X_Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[217]"></a>GUI_X_InitOS</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_InitOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = GUI_X_InitOS &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
</UL>

<P><STRONG><a name="[28f]"></a>GUI_X_Lock</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_x_ucos.o(i.GUI_X_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 148 + Unknown Stack Size
<LI>Call Chain = GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[2e3]"></a>GUI_X_Unlock</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_x_ucos.o(i.GUI_X_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_X_Unlock &rArr; OSSemPost &rArr; OS_SemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
</UL>

<P><STRONG><a name="[270]"></a>GUI__AddSpaceHex</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui__addspacehex.o(i.GUI__AddSpaceHex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__AddSpaceHex &rArr; GUI_AddHex
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddHex
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ErrorOut1
</UL>

<P><STRONG><a name="[2b1]"></a>GUI__AllocAlphaBuffer</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__AllocAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[2f1]"></a>GUI__AlphaSuppressMixing</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_setalpha.o(i.GUI__AlphaSuppressMixing))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__AlphaSuppressMixing
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetAndMask
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[1d7]"></a>GUI__CalcTextRect</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, gui__calctextrect.o(i.GUI__CalcTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = GUI__CalcTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
</UL>

<P><STRONG><a name="[45b]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>

<P><STRONG><a name="[2b3]"></a>GUI__CompactPixelIndicesEx</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__CompactPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[288]"></a>GUI__Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_core.o(i.GUI__Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[26a]"></a>GUI__CreateBitmapFromStream</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, gui_stream.o(i.GUI__CreateBitmapFromStream))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__CreateBitmapFromStream
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawStreamedBitmap
</UL>

<P><STRONG><a name="[255]"></a>GUI__DispLine</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[25e]"></a>GUI__DispStringInRect</STRONG> (Thumb, 320 bytes, Stack size 72 bytes, gui_dispstringinrect.o(i.GUI__DispStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
</UL>

<P><STRONG><a name="[456]"></a>GUI__DivideRound32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__divideround32.o(i.GUI__DivideRound32))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[2b2]"></a>GUI__DoAlphaBlending</STRONG> (Thumb, 422 bytes, Stack size 96 bytes, gui__alpha.o(i.GUI__DoAlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndicesEx
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[1d4]"></a>GUI__DrawTwinArc2</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = GUI__DrawTwinArc2 &rArr; _DrawTwinArc2 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
</UL>

<P><STRONG><a name="[1a1]"></a>GUI__DrawTwinArc4</STRONG> (Thumb, 104 bytes, Stack size 80 bytes, gui__drawtwinarc.o(i.GUI__DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
</UL>

<P><STRONG><a name="[490]"></a>GUI__ExpandPixelIndices</STRONG> (Thumb, 218 bytes, Stack size 20 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI__ExpandPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRectFromMemdev
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
</UL>

<P><STRONG><a name="[2f8]"></a>GUI__ExpandPixelIndicesEx</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__ExpandPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[2fb]"></a>GUI__FillTrippleArc</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i.GUI__FillTrippleArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = GUI__FillTrippleArc &rArr; _FillTrippleArc &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
</UL>

<P><STRONG><a name="[2f0]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gui__alpha.o(i.GUI__GetAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[27d]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui__getfontsizey.o(i.GUI__GetFontSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>

<P><STRONG><a name="[254]"></a>GUI__GetLineDistX</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[253]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[283]"></a>GUI__GetNumChars</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui__getnumchars.o(i.GUI__GetNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>

<P><STRONG><a name="[281]"></a>GUI__GetOrg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_getorg.o(i.GUI__GetOrg))
<BR><BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
</UL>

<P><STRONG><a name="[2ff]"></a>GUI__GetOverlap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_charline.o(i.GUI__GetOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>

<P><STRONG><a name="[2f5]"></a>GUI__HandleEOLine</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui__handleeoline.o(i.GUI__HandleEOLine))
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[424]"></a>GUI__IntersectRect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui__intersectrect.o(i.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[25c]"></a>GUI__IntersectRects</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui__intersectrects.o(i.GUI__IntersectRects))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
</UL>

<P><STRONG><a name="[300]"></a>GUI__ManageCache</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__managecache.o(i.GUI__ManageCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[301]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, gui__managecache.o(i.GUI__ManageCacheEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[1a]"></a>GUI__MixColors</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColorsBulk
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>GUI__MixColorsBulk</STRONG> (Thumb, 78 bytes, Stack size 36 bytes, gui__alpha.o(i.GUI__MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GUI__MixColorsBulk &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[2e6]"></a>GUI__Read16</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui__read.o(i.GUI__Read16))
<BR><BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF_CreateFont
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispChar
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF__GetOffAndSize
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF__GetCharDistX
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReadHeaderFromStream
</UL>

<P><STRONG><a name="[2e5]"></a>GUI__Read32</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui__read.o(i.GUI__Read32))
<BR><BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF_CreateFont
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF__GetOffAndSize
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF__GetOff
</UL>

<P><STRONG><a name="[269]"></a>GUI__ReadHeaderFromStream</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gui_stream.o(i.GUI__ReadHeaderFromStream))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__ReadHeaderFromStream
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawStreamedBitmap
</UL>

<P><STRONG><a name="[266]"></a>GUI__ReduceRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__reducerect.o(i.GUI__ReduceRect))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[216]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_core.o(i.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[263]"></a>GUI__WrapGetNumBytesToNextLine</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui__wrap.o(i.GUI__WrapGetNumBytesToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
</UL>

<P><STRONG><a name="[262]"></a>GUI__WrapGetNumCharsDisp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI__WrapGetNumCharsDisp &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[302]"></a>GUI__WrapGetNumCharsToNextLine</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>

<P><STRONG><a name="[20e]"></a>GUI__memset</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gui__memset.o(i.GUI__memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ErrorOut1
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[485]"></a>GUI__memset16</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui__memset16.o(i.GUI__memset16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[497]"></a>GUI__sqrt32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__sqrt32.o(i.GUI__sqrt32))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTrippleArcPara
</UL>

<P><STRONG><a name="[1fe]"></a>GUI_cos</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.GUI_cos))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[1ff]"></a>GUI_sin</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, gui_drawline.o(i.GUI_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[73]"></a>GetPinStateOfKey1</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, key.o(i.GetPinStateOfKey1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetPinStateOfKey1
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.AppObjCreate)
</UL>
<P><STRONG><a name="[74]"></a>GetPinStateOfKey2</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, key.o(i.GetPinStateOfKey2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetPinStateOfKey2
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.AppObjCreate)
</UL>
<P><STRONG><a name="[af]"></a>HEADER_DrawSkinFlex</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, header_skinflex.o(i.HEADER_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = HEADER_DrawSkinFlex &rArr; _DrawText &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawOverlap
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.UserAPP)
</UL>
<P><STRONG><a name="[3db]"></a>HEADER_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, header_skin.o(i.HEADER_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[2b]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HardFault_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c2]"></a>ICONVIEW_AddBitmapItem</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, iconview.o(i.ICONVIEW_AddBitmapItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 716 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_AddBitmapItem &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMidWin
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBotWin
</UL>

<P><STRONG><a name="[94]"></a>ICONVIEW_Callback</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, iconview.o(i.ICONVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 684 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_Callback &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexFromPos
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_CreateUser)
</UL>
<P><STRONG><a name="[1c1]"></a>ICONVIEW_CreateEx</STRONG> (Thumb, 40 bytes, Stack size 56 bytes, iconview.o(i.ICONVIEW_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_CreateEx &rArr; ICONVIEW_CreateUser &rArr; _SetSel &rArr; _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMidWin
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBotWin
</UL>

<P><STRONG><a name="[315]"></a>ICONVIEW_CreateUser</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, iconview.o(i.ICONVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_CreateUser &rArr; _SetSel &rArr; _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateEx
</UL>

<P><STRONG><a name="[317]"></a>ICONVIEW_GetSel</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, iconview.o(i.ICONVIEW_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_GetSel &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
</UL>

<P><STRONG><a name="[1c3]"></a>ICONVIEW_SetBkColor</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, iconview.o(i.ICONVIEW_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_SetBkColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMidWin
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBotWin
</UL>

<P><STRONG><a name="[1ca]"></a>ICONVIEW_SetFont</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, iconview.o(i.ICONVIEW_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMidWin
</UL>

<P><STRONG><a name="[1c6]"></a>ICONVIEW_SetIconAlign</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, iconview.o(i.ICONVIEW_SetIconAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_SetIconAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMidWin
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBotWin
</UL>

<P><STRONG><a name="[1c4]"></a>ICONVIEW_SetSel</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, iconview.o(i.ICONVIEW_SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_SetSel &rArr; _SetSel &rArr; _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMidWin
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBotWin
</UL>

<P><STRONG><a name="[1c5]"></a>ICONVIEW_SetSpace</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, iconview.o(i.ICONVIEW_SetSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_SetSpace &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMidWin
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBotWin
</UL>

<P><STRONG><a name="[1c9]"></a>ICONVIEW_SetTextColor</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, iconview.o(i.ICONVIEW_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = ICONVIEW_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMidWin
</UL>

<P><STRONG><a name="[19b]"></a>ILI9341_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_ili9341_lcd.o(i.ILI9341_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ILI9341_Init &rArr; ILI9341_FSMC_Config &rArr; FSMC_NORSRAMInit
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Rst
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_REG_Config
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_GPIO_Config
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_FSMC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[31e]"></a>ILI9341_ReadID</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bsp_ili9341_lcd.o(i.ILI9341_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ILI9341_ReadID
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_REG_Config
</UL>

<P><STRONG><a name="[195]"></a>Key1_GPIO_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, key.o(i.Key1_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Key1_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[196]"></a>Key2_GPIO_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, key.o(i.Key2_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Key2_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[174]"></a>KeyCreate</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, key.o(i.KeyCreate))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppObjCreate
</UL>

<P><STRONG><a name="[186]"></a>Key_AccessTimes</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, key.o(i.Key_AccessTimes))
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[185]"></a>Key_RefreshState</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, key.o(i.Key_RefreshState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Key_RefreshState
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[333]"></a>LCD_AA_MixColors</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd_aa.o(i.LCD_AA_MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_AA_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA_NoTrans
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
</UL>

<P><STRONG><a name="[2f2]"></a>LCD_AA_SetAndMask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_aa.o(i.LCD_AA_SetAndMask))
<BR><BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaSuppressMixing
</UL>

<P><STRONG><a name="[32e]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA_Xor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA_NoTrans
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[1f6]"></a>LCD_DrawBitmap</STRONG> (Thumb, 508 bytes, Stack size 88 bytes, lcd.o(i.LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispChar
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[89]"></a>LCD_DrawHLine</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lcd.o(i.LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> gui_core.o(.constdata)
<LI> gui_drawgradient.o(i.GUI_DrawGradientV)
</UL>
<P><STRONG><a name="[e6]"></a>LCD_DrawPixel</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>LCD_DrawVLine</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawgradient.o(i.GUI_DrawGradientH)
</UL>
<P><STRONG><a name="[210]"></a>LCD_FillRect</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispChar
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapCW
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
</UL>

<P><STRONG><a name="[233]"></a>LCD_GetBitsPerPixel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixel &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_SerializeEx
</UL>

<P><STRONG><a name="[321]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixelEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[276]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[27a]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>

<P><STRONG><a name="[322]"></a>LCD_GetMirrorXEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetMirrorXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorXEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[323]"></a>LCD_GetMirrorYEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetMirrorYEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetMirrorYEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[324]"></a>LCD_GetNumColors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[325]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColorsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[326]"></a>LCD_GetNumLayers</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd_getnumdisplays.o(i.LCD_GetNumLayers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[327]"></a>LCD_GetPalette</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette &rArr; LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[328]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetPaletteEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
</UL>

<P><STRONG><a name="[329]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_getpixelcolor.o(i.LCD_GetPixelColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SerializeEx
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA_Xor
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
</UL>

<P><STRONG><a name="[32a]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, lcd_getp.o(i.LCD_GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SerializeEx
</UL>

<P><STRONG><a name="[27f]"></a>LCD_GetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_GetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
</UL>

<P><STRONG><a name="[32b]"></a>LCD_GetSwapXYEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetSwapXYEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetSwapXYEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[29d]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2fd]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetVXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitAlpha
</UL>

<P><STRONG><a name="[29f]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[230]"></a>LCD_GetXSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_Serialize
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPhysValues
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Explain
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispStringCentered
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPointCW
</UL>

<P><STRONG><a name="[2d4]"></a>LCD_GetXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[231]"></a>LCD_GetYSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_Serialize
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Explain
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispStringCentered
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPointCW
</UL>

<P><STRONG><a name="[2d5]"></a>LCD_GetYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[0]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTableBM))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableBM &rArr; LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.data)
</UL>
<P><STRONG><a name="[32d]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableUncached))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_GetpPalConvTableUncached
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableBM
</UL>

<P><STRONG><a name="[277]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Index2Color
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA_Xor
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA_NoTrans
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[dd]"></a>LCD_Index2Color_565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_565_index2color.o(i.LCD_Index2Color_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>LCD_Index2Color_888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_888_index2color.o(i.LCD_Index2Color_888))
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__DoAlphaBlending)
</UL>
<P><STRONG><a name="[8a]"></a>LCD_Index2Color_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888_index2color.o(i.LCD_Index2Color_8888))
<BR>[Address Reference Count : 4]<UL><LI> lcd_rle32.o(i._Draw)
<LI> gui__alpha.o(i.GUI__DoAlphaBlending)
<LI> guicc_8888.o(.constdata)
<LI> guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha)
</UL>
<P><STRONG><a name="[e2]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565_index2color.o(i.LCD_Index2Color_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[32f]"></a>LCD_InitColors</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_color.o(i.LCD_InitColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[330]"></a>LCD_InitLUT</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_InitLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = LCD_InitLUT &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[2c3]"></a>LCD_SelectLCD</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lcd_selectlcd.o(i.LCD_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[1d8]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[337]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[332]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcd_setcliprectex.o(i.LCD_SetClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[2ad]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[1d9]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_DrawSkinFlex
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawGradient
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[336]"></a>LCD_SetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
</UL>

<P><STRONG><a name="[20f]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispChar
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
</UL>

<P><STRONG><a name="[331]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetLUTEntryEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[cb]"></a>LCD_SetPixelAA</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, lcd_aa.o(i.LCD_SetPixelAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotatecw.o(i._GetpfSetPixel)
</UL>
<P><STRONG><a name="[ca]"></a>LCD_SetPixelAA_NoTrans</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, lcd_aa.o(i.LCD_SetPixelAA_NoTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetPixelAA_NoTrans &rArr; LCD_AA_MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotatecw.o(i._GetpfSetPixel)
</UL>
<P><STRONG><a name="[cc]"></a>LCD_SetPixelAA_Xor</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, lcd_aa.o(i.LCD_SetPixelAA_Xor))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_SetPixelAA_Xor &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotatecw.o(i._GetpfSetPixel)
</UL>
<P><STRONG><a name="[2c8]"></a>LCD_SetPosEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetPosEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetPosEx
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerPosEx
</UL>

<P><STRONG><a name="[334]"></a>LCD_SetSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[335]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetVSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[2ac]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(i.LCD_UpdateColorIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[2f3]"></a>LCD_X_Config</STRONG> (Thumb, 262 bytes, Stack size 152 bytes, lcdconf_flexcolor_template.o(i.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 444 + Unknown Stack Size
<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_SetOrientation
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_Config
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[339]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcdconf_flexcolor_template.o(i.LCD_X_DisplayDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD_X_DisplayDriver &rArr; ILI9341_Init &rArr; ILI9341_FSMC_Config &rArr; FSMC_NORSRAMInit
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
</UL>

<P><STRONG><a name="[33a]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 424 bytes, Stack size 104 bytes, lcd.o(i.LCD__DrawBitmap_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[33b]"></a>LCD__GetBPP</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPP))
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[2a4]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd_getex.o(i.LCD__GetBPPDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[194]"></a>LED_GPIO_Config</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, bsp_led.o(i.LED_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LED_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[b1]"></a>MULTIPAGE_DrawSkinFlex</STRONG> (Thumb, 568 bytes, Stack size 64 bytes, multipage_skinflex.o(i.MULTIPAGE_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = MULTIPAGE_DrawSkinFlex &rArr; GUI_DispStringInRectEx &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_GetFont
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.UserAPP)
</UL>
<P><STRONG><a name="[33c]"></a>MULTIPAGE_GetFont</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, multipage.o(i.MULTIPAGE_GetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = MULTIPAGE_GetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_DrawSkinFlex
</UL>

<P><STRONG><a name="[3dd]"></a>MULTIPAGE_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, multipage_skin.o(i.MULTIPAGE_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[33d]"></a>MULTIPAGE__CalcBorderRect</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, multipage.o(i.MULTIPAGE__CalcBorderRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MULTIPAGE__CalcBorderRect &rArr; _AdjustRect
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AdjustRect
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetTextRect
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[340]"></a>MULTIPAGE__GetPagePos</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, multipage.o(i.MULTIPAGE__GetPagePos))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = MULTIPAGE__GetPagePos &rArr; MULTIPAGE__GetPageSize &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPageSize
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextWidth
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[341]"></a>MULTIPAGE__GetPageSize</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, multipage.o(i.MULTIPAGE__GetPageSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = MULTIPAGE__GetPageSize &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPagePos
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTouchedPage
</UL>

<P><STRONG><a name="[342]"></a>MULTIPAGE__GetTextRect</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, multipage.o(i.MULTIPAGE__GetTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = MULTIPAGE__GetTextRect &rArr; _GetTextWidth &rArr; MULTIPAGE__GetPagePos &rArr; MULTIPAGE__GetPageSize &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__CalcBorderRect
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTouchedPage
</UL>

<P><STRONG><a name="[2c]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b3]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bsp_NVIC_Configuration
</UL>

<P><STRONG><a name="[353]"></a>OSCfg_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cfg_app.o(i.OSCfg_Init))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[378]"></a>OSIdleTaskHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSIdleTaskHook))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_IdleTask
</UL>

<P><STRONG><a name="[344]"></a>OSInit</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, os_core.o(i.OSInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = OSInit &rArr; OS_TmrInit &rArr; OSTaskCreate &rArr; OS_TaskInitTCB
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCfg_Init
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrInit
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTaskInit
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskInit
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTaskInit
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemInit
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioInit
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MutexInit
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MsgPoolInit
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHook
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInit
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_IdleTaskInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[345]"></a>OSInitHook</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, os_cpu_c.o(i.OSInitHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OSInitHook
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[354]"></a>OSIntExit</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, os_core.o(i.OSIntExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSIntExit &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioGetHighest
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
</UL>

<P><STRONG><a name="[358]"></a>OSSched</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, os_core.o(i.OSSched))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioGetHighest
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSuspend
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSemPost
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskResume
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemPost
</UL>

<P><STRONG><a name="[17c]"></a>OSSchedLock</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, os_core.o(i.OSSchedLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSSchedLock
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShot
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
</UL>

<P><STRONG><a name="[17f]"></a>OSSchedUnlock</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, os_core.o(i.OSSchedUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSSchedUnlock &rArr; OSSched &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShot
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
</UL>

<P><STRONG><a name="[175]"></a>OSSemCreate</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, os_sem.o(i.OSSemCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppObjCreate
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>

<P><STRONG><a name="[178]"></a>OSSemPend</STRONG> (Thumb, 252 bytes, Stack size 72 bytes, os_sem.o(i.OSSemPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShot
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
</UL>

<P><STRONG><a name="[187]"></a>OSSemPost</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, os_sem.o(i.OSSemPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OSSemPost &rArr; OS_SemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>

<P><STRONG><a name="[35d]"></a>OSStart</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, os_core.o(i.OSStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSStart &rArr; OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioGetHighest
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35f]"></a>OSStatReset</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, os_stat.o(i.OSStatReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSStatReset &rArr; OS_TmrResetPeak
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrResetPeak
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListResetPeak
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
</UL>

<P><STRONG><a name="[183]"></a>OSStatTaskCPUUsageInit</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, os_stat.o(i.OSStatTaskCPUUsageInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = OSStatTaskCPUUsageInit &rArr; OSTaskResume &rArr; OS_TaskResume &rArr; OS_TaskRdy &rArr; OS_TickListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[384]"></a>OSStatTaskHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSStatTaskHook))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
</UL>

<P><STRONG><a name="[177]"></a>OSTaskCreate</STRONG> (Thumb, 240 bytes, Stack size 64 bytes, os_task.o(i.OSTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = OSTaskCreate &rArr; OS_TaskInitTCB
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskInitTCB
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MsgQInit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioInsert
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsertTail
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrInit
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTaskInit
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTaskInit
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_IdleTaskInit
</UL>

<P><STRONG><a name="[367]"></a>OSTaskCreateHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskCreateHook))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[36a]"></a>OSTaskDel</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, os_task.o(i.OSTaskDel))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OSTaskDel &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskInitTCB
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MsgQFreeAll
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListRemove
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListRemove
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[36f]"></a>OSTaskDelHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskDelHook))
<BR><BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[363]"></a>OSTaskResume</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, os_task.o(i.OSTaskResume))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OSTaskResume &rArr; OS_TaskResume &rArr; OS_TaskRdy &rArr; OS_TickListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskResume
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
</UL>

<P><STRONG><a name="[385]"></a>OSTaskReturnHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskReturnHook))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[371]"></a>OSTaskSemPend</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, os_task.o(i.OSTaskSemPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 100 + Unknown Stack Size
<LI>Call Chain = OSTaskSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTask
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
</UL>

<P><STRONG><a name="[372]"></a>OSTaskSemPost</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, os_task.o(i.OSTaskSemPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = OSTaskSemPost &rArr; OS_TaskSemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[365]"></a>OSTaskStkInit</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSTaskStkInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>

<P><STRONG><a name="[362]"></a>OSTaskSuspend</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, os_task.o(i.OSTaskSuspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSTaskSuspend &rArr; OS_TaskSuspend &rArr; OS_RdyListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSuspend
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
</UL>

<P><STRONG><a name="[72]"></a>OSTaskSwHook</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSTaskSwHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OSTaskSwHook
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_a.o(CODE)
</UL>
<P><STRONG><a name="[2ed]"></a>OSTimeDly</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, os_time.o(i.OSTimeDly))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = OSTimeDly &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListInsert
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_StatTask
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
</UL>

<P><STRONG><a name="[188]"></a>OSTimeDlyHMSM</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, os_time.o(i.OSTimeDlyHMSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = OSTimeDlyHMSM &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListInsert
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskUpdate
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[2ee]"></a>OSTimeGet</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, os_time.o(i.OSTimeGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>

<P><STRONG><a name="[376]"></a>OSTimeTick</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, os_time.o(i.OSTimeTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OSTimeTick &rArr; OSTaskSemPost &rArr; OS_TaskSemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SysTickHandler
</UL>

<P><STRONG><a name="[377]"></a>OSTimeTickHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTimeTickHook))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[32]"></a>OS_CPU_SysTickHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, os_cpu_c.o(i.OS_CPU_SysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = OS_CPU_SysTickHandler &rArr; OSTimeTick &rArr; OSTaskSemPost &rArr; OS_TaskSemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a0]"></a>OS_CPU_SysTickInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, os_cpu_c.o(i.OS_CPU_SysTickInit))
<BR><BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Tick_Init
</UL>

<P><STRONG><a name="[348]"></a>OS_FlagInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_flag.o(i.OS_FlagInit))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[9d]"></a>OS_IdleTask</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, os_core.o(i.OS_IdleTask))
<BR><BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIdleTaskHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_core.o(i.OS_IdleTaskInit)
</UL>
<P><STRONG><a name="[34f]"></a>OS_IdleTaskInit</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, os_core.o(i.OS_IdleTaskInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = OS_IdleTaskInit &rArr; OSTaskCreate &rArr; OS_TaskInitTCB
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[349]"></a>OS_MemInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_mem.o(i.OS_MemInit))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[34a]"></a>OS_MsgPoolInit</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, os_msg.o(i.OS_MsgPoolInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OS_MsgPoolInit
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[36e]"></a>OS_MsgQFreeAll</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, os_msg.o(i.OS_MsgQFreeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_MsgQFreeAll
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[366]"></a>OS_MsgQInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, os_msg.o(i.OS_MsgQInit))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskInitTCB
</UL>

<P><STRONG><a name="[34b]"></a>OS_MutexInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_mutex.o(i.OS_MutexInit))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[35a]"></a>OS_Pend</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, os_core.o(i.OS_Pend))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskBlock
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListInsertPrio
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendDataInit
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
</UL>

<P><STRONG><a name="[37a]"></a>OS_PendDataInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, os_core.o(i.OS_PendDataInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_PendDataInit
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
</UL>

<P><STRONG><a name="[359]"></a>OS_PendListInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_core.o(i.OS_PendListInit))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>

<P><STRONG><a name="[37b]"></a>OS_PendListInsertPrio</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, os_core.o(i.OS_PendListInsertPrio))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_PendListInsertPrio
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
</UL>

<P><STRONG><a name="[36d]"></a>OS_PendListRemove</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, os_core.o(i.OS_PendListRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListRemove1
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdate
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
</UL>

<P><STRONG><a name="[37c]"></a>OS_PendListRemove1</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, os_core.o(i.OS_PendListRemove1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_PendListRemove1
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListRemove
</UL>

<P><STRONG><a name="[37d]"></a>OS_Post</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, os_core.o(i.OS_Post))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListRemove
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskRdy
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post1
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSemPost
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SemPost
</UL>

<P><STRONG><a name="[37f]"></a>OS_Post1</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, os_core.o(i.OS_Post1))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_Post1
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
</UL>

<P><STRONG><a name="[357]"></a>OS_PrioGetHighest</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, os_prio.o(i.OS_PrioGetHighest))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OS_PrioGetHighest
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_CntLeadZeros
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[346]"></a>OS_PrioInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, os_prio.o(i.OS_PrioInit))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[368]"></a>OS_PrioInsert</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_prio.o(i.OS_PrioInsert))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsert
</UL>

<P><STRONG><a name="[383]"></a>OS_PrioRemove</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_prio.o(i.OS_PrioRemove))
<BR><BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
</UL>

<P><STRONG><a name="[34c]"></a>OS_QInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_q.o(i.OS_QInit))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[347]"></a>OS_RdyListInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, os_core.o(i.OS_RdyListInit))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[381]"></a>OS_RdyListInsert</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, os_core.o(i.OS_RdyListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_RdyListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioInsert
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsertTail
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsertHead
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskRdy
</UL>

<P><STRONG><a name="[382]"></a>OS_RdyListInsertHead</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, os_core.o(i.OS_RdyListInsertHead))
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsert
</UL>

<P><STRONG><a name="[369]"></a>OS_RdyListInsertTail</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, os_core.o(i.OS_RdyListInsertTail))
<BR><BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsert
</UL>

<P><STRONG><a name="[36b]"></a>OS_RdyListRemove</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, os_core.o(i.OS_RdyListRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_RdyListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PrioRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskSuspend
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskBlock
</UL>

<P><STRONG><a name="[34d]"></a>OS_SemInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_sem.o(i.OS_SemInit))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[35c]"></a>OS_SemPost</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, os_sem.o(i.OS_SemPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = OS_SemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>

<P><STRONG><a name="[9e]"></a>OS_StatTask</STRONG> (Thumb, 256 bytes, Stack size 8 bytes, os_stat.o(i.OS_StatTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = OS_StatTask &rArr; OSTimeDly &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskHook
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_stat.o(i.OS_StatTaskInit)
</UL>
<P><STRONG><a name="[351]"></a>OS_StatTaskInit</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, os_stat.o(i.OS_StatTaskInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = OS_StatTaskInit &rArr; OSTaskCreate &rArr; OS_TaskInitTCB
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[379]"></a>OS_TaskBlock</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, os_core.o(i.OS_TaskBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListInsert
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Pend
</UL>

<P><STRONG><a name="[34e]"></a>OS_TaskInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, os_task.o(i.OS_TaskInit))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[364]"></a>OS_TaskInitTCB</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, os_task.o(i.OS_TaskInitTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_TaskInitTCB
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MsgQInit
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[37e]"></a>OS_TaskRdy</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, os_core.o(i.OS_TaskRdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_TaskRdy &rArr; OS_TickListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListRemove
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdate
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskResume
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
</UL>

<P><STRONG><a name="[370]"></a>OS_TaskResume</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, os_task.o(i.OS_TaskResume))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OS_TaskResume &rArr; OS_TaskRdy &rArr; OS_TickListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskRdy
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
</UL>

<P><STRONG><a name="[9c]"></a>OS_TaskReturn</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, os_task.o(i.OS_TaskReturn))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OS_TaskReturn &rArr; OSTaskDel &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskReturnHook
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(i.OSTaskStkInit)
</UL>
<P><STRONG><a name="[373]"></a>OS_TaskSemPost</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, os_task.o(i.OS_TaskSemPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = OS_TaskSemPost &rArr; OS_Post &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPost
</UL>

<P><STRONG><a name="[374]"></a>OS_TaskSuspend</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, os_task.o(i.OS_TaskSuspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OS_TaskSuspend &rArr; OS_RdyListRemove
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_RdyListRemove
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSched
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
</UL>

<P><STRONG><a name="[387]"></a>OS_TickListInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, os_tick.o(i.OS_TickListInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_TickListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTaskInit
</UL>

<P><STRONG><a name="[375]"></a>OS_TickListInsert</STRONG> (Thumb, 228 bytes, Stack size 20 bytes, os_tick.o(i.OS_TickListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OS_TickListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskBlock
</UL>

<P><STRONG><a name="[36c]"></a>OS_TickListRemove</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, os_tick.o(i.OS_TickListRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_TickListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdate
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskRdy
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Post
</UL>

<P><STRONG><a name="[360]"></a>OS_TickListResetPeak</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, os_tick.o(i.OS_TickListResetPeak))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_TickListResetPeak
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatReset
</UL>

<P><STRONG><a name="[386]"></a>OS_TickListUpdate</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, os_tick.o(i.OS_TickListUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = OS_TickListUpdate &rArr; OS_PendListRemove &rArr; OS_PendListRemove1
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListRemove
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskRdy
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_PendListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickTask
</UL>

<P><STRONG><a name="[9f]"></a>OS_TickTask</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, os_tick.o(i.OS_TickTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = OS_TickTask &rArr; OSTaskSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListUpdate
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_tick.o(i.OS_TickTaskInit)
</UL>
<P><STRONG><a name="[350]"></a>OS_TickTaskInit</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, os_tick.o(i.OS_TickTaskInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = OS_TickTaskInit &rArr; OSTaskCreate &rArr; OS_TaskInitTCB
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TickListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[352]"></a>OS_TmrInit</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, os_tmr.o(i.OS_TmrInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = OS_TmrInit &rArr; OSTaskCreate &rArr; OS_TaskInitTCB
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[389]"></a>OS_TmrLink</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, os_tmr.o(i.OS_TmrLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_TmrLink
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
</UL>

<P><STRONG><a name="[361]"></a>OS_TmrResetPeak</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, os_tmr.o(i.OS_TmrResetPeak))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_TmrResetPeak
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatReset
</UL>

<P><STRONG><a name="[a0]"></a>OS_TmrTask</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, os_tmr.o(i.OS_TmrTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = OS_TmrTask &rArr; OSTaskSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSemPend
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrUnlink
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrLink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_tmr.o(i.OS_TmrInit)
</UL>
<P><STRONG><a name="[388]"></a>OS_TmrUnlink</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, os_tmr.o(i.OS_TmrUnlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_TmrUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TmrTask
</UL>

<P><STRONG><a name="[a9]"></a>PROGBAR_DrawSkinFlex</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, progbar_skinflex.o(i.PROGBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = PROGBAR_DrawSkinFlex &rArr; _DrawBackground &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackground
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.UserAPP)
</UL>
<P><STRONG><a name="[3d4]"></a>PROGBAR_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, progbar_skin.o(i.PROGBAR_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[38b]"></a>PROGBAR__GetTextLocked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, progbar.o(i.PROGBAR__GetTextLocked))
<BR><BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[38c]"></a>PROGBAR__GetTextRect</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, progbar.o(i.PROGBAR__GetTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = PROGBAR__GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[49d]"></a>PROGBAR__Value2Pos</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR__Value2Pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PROGBAR__Value2Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[b0]"></a>RADIO_DrawSkinFlex</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, radio_skinflex.o(i.RADIO_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = RADIO_DrawSkinFlex &rArr; GUI__FillTrippleArc &rArr; _FillTrippleArc &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.UserAPP)
</UL>
<P><STRONG><a name="[3dc]"></a>RADIO_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, radio_skin.o(i.RADIO_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[23]"></a>RADIO__GetButtonSize</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, radio.o(i.RADIO__GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RADIO__GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio.o(.data)
</UL>
<P><STRONG><a name="[192]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_FSMC_Config
</UL>

<P><STRONG><a name="[3bc]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_CHx_Cap_Init
</UL>

<P><STRONG><a name="[1b1]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Reset
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_CHx_Cap_Init
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_initialize
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_GPIO_SPI_Config
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_GPIO_Config
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_GPIO_Config
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key2_GPIO_Config
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key1_GPIO_Config
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_Init
</UL>

<P><STRONG><a name="[191]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_CPU_ClkFreq
</UL>

<P><STRONG><a name="[38d]"></a>SCROLLBAR_AddValue</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[a1]"></a>SCROLLBAR_Callback</STRONG> (Thumb, 316 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar.o(i.SCROLLBAR_CreateUser)
</UL>
<P><STRONG><a name="[395]"></a>SCROLLBAR_CreateAttached</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, scrollbar_create.o(i.SCROLLBAR_CreateAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[396]"></a>SCROLLBAR_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, scrollbar.o(i.SCROLLBAR_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>

<P><STRONG><a name="[397]"></a>SCROLLBAR_CreateUser</STRONG> (Thumb, 242 bytes, Stack size 64 bytes, scrollbar.o(i.SCROLLBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[392]"></a>SCROLLBAR_Dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Dec &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[ad]"></a>SCROLLBAR_DrawSkinFlex</STRONG> (Thumb, 374 bytes, Stack size 72 bytes, scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_DrawSkinFlex &rArr; WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.UserAPP)
</UL>
<P><STRONG><a name="[391]"></a>SCROLLBAR_Inc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Inc &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[3d9]"></a>SCROLLBAR_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, scrollbar_skin.o(i.SCROLLBAR_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[38e]"></a>SCROLLBAR_SetValue</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[38f]"></a>SCROLLBAR__InvalidatePartner</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__InvalidatePartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[455]"></a>SCROLLBAR__Rect2VRect</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__Rect2VRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCROLLBAR__Rect2VRect
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[ae]"></a>SLIDER_DrawSkinFlex</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, slider_skinflex.o(i.SLIDER_DrawSkinFlex))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = SLIDER_DrawSkinFlex &rArr; _DrawThumbV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbV
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawThumbH
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftV
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawShaftH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.UserAPP)
</UL>
<P><STRONG><a name="[3da]"></a>SLIDER_SetDefaultSkin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, slider_skin.o(i.SLIDER_SetDefaultSkin))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[3c1]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_initialize
</UL>

<P><STRONG><a name="[19e]"></a>SPI_FLASH_BufferRead</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, fatfs_flash_spi.o(i.SPI_FLASH_BufferRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_read
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbGetData
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>

<P><STRONG><a name="[3a4]"></a>SPI_FLASH_BufferWrite</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, fatfs_flash_spi.o(i.SPI_FLASH_BufferWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_write
</UL>

<P><STRONG><a name="[3a5]"></a>SPI_FLASH_PageWrite</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, fatfs_flash_spi.o(i.SPI_FLASH_PageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferWrite
</UL>

<P><STRONG><a name="[3a8]"></a>SPI_FLASH_ReadID</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, fatfs_flash_spi.o(i.SPI_FLASH_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SPI_FLASH_ReadID &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_status
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_initialize
</UL>

<P><STRONG><a name="[3a9]"></a>SPI_FLASH_SectorErase</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, fatfs_flash_spi.o(i.SPI_FLASH_SectorErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SPI_FLASH_SectorErase &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_write
</UL>

<P><STRONG><a name="[3a3]"></a>SPI_FLASH_SendByte</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, fatfs_flash_spi.o(i.SPI_FLASH_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WriteEnable
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadID
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>

<P><STRONG><a name="[3a7]"></a>SPI_FLASH_WaitForWriteEnd</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, fatfs_flash_spi.o(i.SPI_FLASH_WaitForWriteEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>

<P><STRONG><a name="[3a6]"></a>SPI_FLASH_WriteEnable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, fatfs_flash_spi.o(i.SPI_FLASH_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SPI_FLASH_WriteEnable &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_PageWrite
</UL>

<P><STRONG><a name="[3ab]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[3ad]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[3ac]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[3c0]"></a>SPI_Init</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, stm32f10x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_initialize
</UL>

<P><STRONG><a name="[2f]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3cf]"></a>Soft_Reset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, bsp.o(i.Soft_Reset))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
</UL>

<P><STRONG><a name="[70]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[a8]"></a>TEXT_Callback</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, text.o(i.TEXT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = TEXT_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> text.o(i.TEXT_CreateUser)
</UL>
<P><STRONG><a name="[1cc]"></a>TEXT_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 48 bytes, text.o(i.TEXT_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = TEXT_CreateEx &rArr; TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateTopWin
</UL>

<P><STRONG><a name="[3b1]"></a>TEXT_CreateUser</STRONG> (Thumb, 150 bytes, Stack size 72 bytes, text.o(i.TEXT_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
</UL>

<P><STRONG><a name="[1cd]"></a>TEXT_SetFont</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, text_setfont.o(i.TEXT_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = TEXT_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateTopWin
</UL>

<P><STRONG><a name="[1ce]"></a>TEXT_SetTextColor</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, text_settextcolor.o(i.TEXT_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = TEXT_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateTopWin
</UL>

<P><STRONG><a name="[3cc]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Reset
</UL>

<P><STRONG><a name="[3be]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_CHx_Cap_Init
</UL>

<P><STRONG><a name="[3ca]"></a>TIM_GetCapture2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture2))
<BR><BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Get_Val
</UL>

<P><STRONG><a name="[3c8]"></a>TIM_GetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Get_Val
</UL>

<P><STRONG><a name="[3c9]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Get_Val
</UL>

<P><STRONG><a name="[3b2]"></a>TIM_ICInit</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_ICInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_CHx_Cap_Init
</UL>

<P><STRONG><a name="[3cb]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Reset
</UL>

<P><STRONG><a name="[3b6]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC1Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[3b8]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC2Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[3ba]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC3Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[3b4]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC4Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[3bd]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_CHx_Cap_Init
</UL>

<P><STRONG><a name="[3bb]"></a>TIMx_CHx_Cap_Init</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, touchpad.o(i.TIMx_CHx_Cap_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = TIMx_CHx_Cap_Init &rArr; TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Init
</UL>

<P><STRONG><a name="[3bf]"></a>TM_FATFS_FLASH_SPI_disk_initialize</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, fatfs_flash_spi.o(i.TM_FATFS_FLASH_SPI_disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TM_FATFS_FLASH_SPI_disk_initialize &rArr; SPI_FLASH_ReadID &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadID
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[4cb]"></a>TM_FATFS_FLASH_SPI_disk_ioctl</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, fatfs_flash_spi.o(i.TM_FATFS_FLASH_SPI_disk_ioctl))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[3c2]"></a>TM_FATFS_FLASH_SPI_disk_read</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, fatfs_flash_spi.o(i.TM_FATFS_FLASH_SPI_disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TM_FATFS_FLASH_SPI_disk_read &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[3c3]"></a>TM_FATFS_FLASH_SPI_disk_status</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, fatfs_flash_spi.o(i.TM_FATFS_FLASH_SPI_disk_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TM_FATFS_FLASH_SPI_disk_status &rArr; SPI_FLASH_ReadID &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_ReadID
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>

<P><STRONG><a name="[3c4]"></a>TM_FATFS_FLASH_SPI_disk_write</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, fatfs_flash_spi.o(i.TM_FATFS_FLASH_SPI_disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[3c5]"></a>TPAD_Get_MaxVal</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, touchpad.o(i.TPAD_Get_MaxVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = TPAD_Get_MaxVal &rArr; TPAD_Get_Val &rArr; TPAD_Reset &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Get_Val
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Scan
</UL>

<P><STRONG><a name="[3c6]"></a>TPAD_Get_Val</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, touchpad.o(i.TPAD_Get_Val))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TPAD_Get_Val &rArr; TPAD_Reset &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetFlagStatus
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCounter
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture2
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Init
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Get_MaxVal
</UL>

<P><STRONG><a name="[18a]"></a>TPAD_Init</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, touchpad.o(i.TPAD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = TPAD_Init &rArr; TIMx_CHx_Cap_Init &rArr; TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Get_Val
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMx_CHx_Cap_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskUpdate
</UL>

<P><STRONG><a name="[3c7]"></a>TPAD_Reset</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, touchpad.o(i.TPAD_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TPAD_Reset &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Get_Val
</UL>

<P><STRONG><a name="[18d]"></a>TPAD_Scan</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, touchpad.o(i.TPAD_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = TPAD_Scan &rArr; TPAD_Get_MaxVal &rArr; TPAD_Get_Val &rArr; TPAD_Reset &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Get_MaxVal
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskUpdate
</UL>

<P><STRONG><a name="[18e]"></a>Touch_MainTask</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, touch_calibrationapp.o(i.Touch_MainTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 868 + Unknown Stack Size
<LI>Call Chain = Touch_MainTask &rArr; _GetPhysValues &rArr; _WaitForPressedState &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SectorErase
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferWrite
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_Reset
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPhysValues
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Explain
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskUserapp
</UL>

<P><STRONG><a name="[198]"></a>USART1_Config</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, bsp_usart1.o(i.USART1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USART1_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[3d3]"></a>USART_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
</UL>

<P><STRONG><a name="[3d2]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
</UL>

<P><STRONG><a name="[4da]"></a>USART_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[3d1]"></a>USART_ITConfig</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
</UL>

<P><STRONG><a name="[3d0]"></a>USART_Init</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Config
</UL>

<P><STRONG><a name="[4d9]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[2e]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18f]"></a>UserAPP</STRONG> (Thumb, 188 bytes, Stack size 0 bytes, app.o(i.UserAPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 764 + Unknown Stack Size
<LI>Call Chain = UserAPP &rArr; CreateMidWin &rArr; ICONVIEW_AddBitmapItem &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetDefaultSkin
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultSkin
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetDefaultSkin
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetDefaultSkin
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE_SetDefaultSkin
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDefaultSkin
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefaultFont
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetDefaultSkin
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_SetDefaultSkin
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_SetDefaultSkin
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetDefaultSkin
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateXBF
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateTopWin
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMidWin
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBotWin
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskUserapp
</UL>

<P><STRONG><a name="[3e2]"></a>WIDGET_AndState</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widget.o(i.WIDGET_AndState))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[169]"></a>WIDGET_EFFECT_3D_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(i.WIDGET_EFFECT_3D_DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = WIDGET_EFFECT_3D_DrawUp &rArr; _DrawUpRect &rArr; GUI_DrawRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[48d]"></a>WIDGET_GetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET_GetDefaultEffect))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonSize
</UL>

<P><STRONG><a name="[30c]"></a>WIDGET_HandleActive</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, widget.o(i.WIDGET_HandleActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 548 + Unknown Stack Size
<LI>Call Chain = WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[3e7]"></a>WIDGET_OrState</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widget.o(i.WIDGET_OrState))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[3e5]"></a>WIDGET_SetState</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, widget.o(i.WIDGET_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[3e8]"></a>WIDGET__DrawFocusRect</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, widget.o(i.WIDGET__DrawFocusRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = WIDGET__DrawFocusRect &rArr; GUI_DrawFocusRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[39b]"></a>WIDGET__DrawTriangle</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, widget.o(i.WIDGET__DrawTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3e9]"></a>WIDGET__DrawVLine</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, widget.o(i.WIDGET__DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = WIDGET__DrawVLine &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[49f]"></a>WIDGET__EFFECT_DrawDown</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET__EFFECT_DrawDown))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3ea]"></a>WIDGET__EFFECT_DrawDownRect</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, widget.o(i.WIDGET__EFFECT_DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WIDGET__EFFECT_DrawDownRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3ec]"></a>WIDGET__EFFECT_DrawUpRect</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, widget.o(i.WIDGET__EFFECT_DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WIDGET__EFFECT_DrawUpRect &rArr; _EffectRequiresRedraw
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3ed]"></a>WIDGET__FillRectEx</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, widget.o(i.WIDGET__FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WIDGET__FillRectEx &rArr; GUI_FillRectEx &rArr; GUI_FillRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1da]"></a>WIDGET__FillStringInRect</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, widget_fillstringinrect.o(i.WIDGET__FillStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = WIDGET__FillStringInRect &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_OwnerDraw
</UL>

<P><STRONG><a name="[3ef]"></a>WIDGET__GetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, widget.o(i.WIDGET__GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = WIDGET__GetBkColor &rArr; WM_GetBkColor &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DIALOG_GetBkColor
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3f2]"></a>WIDGET__GetClientRect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[3e6]"></a>WIDGET__GetInsideRect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetInsideRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIDGET__GetInsideRect
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[457]"></a>WIDGET__GetXSize</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, widget.o(i.WIDGET__GetXSize))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[458]"></a>WIDGET__GetYSize</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, widget.o(i.WIDGET__GetYSize))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[316]"></a>WIDGET__Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, widget.o(i.WIDGET__Init))
<BR><BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[399]"></a>WIDGET__RotateRect90</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, widget.o(i.WIDGET__RotateRect90))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
</UL>

<P><STRONG><a name="[294]"></a>WM_Activate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm.o(i.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[3f3]"></a>WM_BringToBottom</STRONG> (Thumb, 136 bytes, Stack size 64 bytes, wm_bringtobottom.o(i.WM_BringToBottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[3e1]"></a>WM_BringToTop</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_bringtotop.o(i.WM_BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = WM_BringToTop &rArr; _BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[3f7]"></a>WM_CreateTimer</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, wm_timer.o(i.WM_CreateTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[1c8]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, wm.o(i.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMidWin
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[2ab]"></a>WM_Deactivate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm.o(i.WM_Deactivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = WM_Deactivate &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[394]"></a>WM_DefaultProc</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, wm.o(i.WM_DefaultProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[3fd]"></a>WM_DeleteTimer</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_timer.o(i.WM_DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>

<P><STRONG><a name="[3fe]"></a>WM_DeleteWindow</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, wm.o(i.WM_DeleteWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = WM_DeleteWindow &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveFromLinList
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>

<P><STRONG><a name="[272]"></a>WM_Exec</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, wm.o(i.WM_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 708 + Unknown Stack Size
<LI>Call Chain = WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>

<P><STRONG><a name="[407]"></a>WM_ForEachDesc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_foreachdesc.o(i.WM_ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_ForEachDesc &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[48e]"></a>WM_GetActiveWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(i.WM_GetActiveWindow))
<BR><BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>

<P><STRONG><a name="[3f0]"></a>WM_GetBkColor</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_getbkcolor.o(i.WM_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = WM_GetBkColor &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
</UL>

<P><STRONG><a name="[1b7]"></a>WM_GetClientRect</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, wm_getclientrect.o(i.WM_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFocus
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>

<P><STRONG><a name="[40a]"></a>WM_GetClientRectEx</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_getclientrect.o(i.WM_GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1c0]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getdesktopwindow.o(i.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateTopWin
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateMidWin
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateBotWin
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[4a6]"></a>WM_GetDesktopWindowEx</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm_getdesktopwindowex.o(i.WM_GetDesktopWindowEx))
<BR><BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
</UL>

<P><STRONG><a name="[3e0]"></a>WM_GetDialogItem</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_getdialogitem.o(i.WM_GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>

<P><STRONG><a name="[1e4]"></a>WM_GetFirstChild</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_getfirstchild.o(i.WM_GetFirstChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = WM_GetFirstChild &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[40c]"></a>WM_GetFlags</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getflags.o(i.WM_GetFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_GetFlags &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[40d]"></a>WM_GetFocussedWindow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_getfocussedwindow.o(i.WM_GetFocussedWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = WM_GetFocussedWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[40e]"></a>WM_GetHasTrans</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_GetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_GetHasTrans &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[40f]"></a>WM_GetId</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_getid.o(i.WM_GetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = WM_GetId &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbMidWin
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbBkWindow
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>

<P><STRONG><a name="[398]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_getinsiderect.o(i.WM_GetInsideRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[410]"></a>WM_GetInsideRectExScrollbar</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, wm_getinsiderectexscrollbar.o(i.WM_GetInsideRectExScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisLines
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
</UL>

<P><STRONG><a name="[1e5]"></a>WM_GetNextSibling</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_getnextsibling.o(i.WM_GetNextSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = WM_GetNextSibling &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
</UL>

<P><STRONG><a name="[39d]"></a>WM_GetParent</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_getparent.o(i.WM_GetParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>

<P><STRONG><a name="[39c]"></a>WM_GetScrollPartner</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_getscrollpartner.o(i.WM_GetScrollPartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 404 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[313]"></a>WM_GetScrollState</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_getscrollstate.o(i.WM_GetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[314]"></a>WM_GetScrollbarH</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getscrollbar.o(i.WM_GetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollbarH &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[312]"></a>WM_GetScrollbarV</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getscrollbar.o(i.WM_GetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[413]"></a>WM_GetWindowRect</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, wm_getwindowrect.o(i.WM_GetWindowRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPointCW
</UL>

<P><STRONG><a name="[411]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_getwindowrect.o(i.WM_GetWindowRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[414]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowSizeX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[1e1]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[8b]"></a>WM_HandlePID</STRONG> (Thumb, 846 bytes, Stack size 144 bytes, wm_touch.o(i.WM_HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 644 + Unknown Stack Size
<LI>Call Chain = WM_HandlePID &rArr; GUI_CURSOR_SetPositionEx &rArr; GUI_SPRITE_SetPosition &rArr; _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetLayerPosEx
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_IsEmpty
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_PID__SetPrevState
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SetPositionEx
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveCriticalHandle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_pid.o(i.GUI_PID_StoreState)
</UL>
<P><STRONG><a name="[420]"></a>WM_HideWindow</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_hide.o(i.WM_HideWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[28d]"></a>WM_Init</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, wm.o(i.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[421]"></a>WM_InvalidateRect</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, wm.o(i.WM_InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[1dc]"></a>WM_InvalidateWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM_InvalidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
</UL>

<P><STRONG><a name="[427]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm.o(i.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[41c]"></a>WM_IsWindow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_iswindow.o(i.WM_IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = WM_IsWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[429]"></a>WM_MoveWindow</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_move.o(i.WM_MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[30f]"></a>WM_NotifyParent</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_notifyparent.o(i.WM_NotifyParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>

<P><STRONG><a name="[2bd]"></a>WM_OnKey</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, wm_onkey.o(i.WM_OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[41e]"></a>WM_PID__SetPrevState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm_pid__getprevstate.o(i.WM_PID__SetPrevState))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[41d]"></a>WM_ReleaseCapture</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_setcapture.o(i.WM_ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = WM_ReleaseCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[42d]"></a>WM_ResizeWindow</STRONG> (Thumb, 246 bytes, Stack size 56 bytes, wm_resizewindow.o(i.WM_ResizeWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[42f]"></a>WM_RestartTimer</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_timer.o(i.WM_RestartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = WM_RestartTimer &rArr; GUI_TIMER_SetPeriod &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[418]"></a>WM_Screen2hWin</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_screen2win.o(i.WM_Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_Screen2hWin &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[3f9]"></a>WM_SelectWindow</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wm.o(i.WM_SelectWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = WM_SelectWindow &rArr; WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[409]"></a>WM_SendMessage</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm.o(i.WM_SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
</UL>

<P><STRONG><a name="[39e]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_sendmessagenopara.o(i.WM_SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_SendMessageNoPara &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[3fc]"></a>WM_SendToParent</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm_sendtoparent.o(i.WM_SendToParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>

<P><STRONG><a name="[3df]"></a>WM_SetCallback</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wm_setcallback.o(i.WM_SetCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = WM_SetCallback &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[433]"></a>WM_SetCapture</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wm_setcapture.o(i.WM_SetCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[19a]"></a>WM_SetCreateFlags</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_setcreateflags.o(i.WM_SetCreateFlags))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[434]"></a>WM_SetDefault</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm.o(i.WM_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = WM_SetDefault &rArr; GL_SetDefault &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[3e4]"></a>WM_SetFocus</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, wm_setfocus.o(i.WM_SetFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[1b0]"></a>WM_SetHasTrans</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_SetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_DrawSkinFlex
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
</UL>

<P><STRONG><a name="[436]"></a>WM_SetScrollState</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, wm_setscrollstate.o(i.WM_SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[437]"></a>WM_SetScrollbarV</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setscrollbar.o(i.WM_SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 580 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[439]"></a>WM_SetSize</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, wm_setsize.o(i.WM_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[25b]"></a>WM_SetUserClipRect</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setusercliprect.o(i.WM_SetUserClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_SetUserClipRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillStringInRect
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[435]"></a>WM_ValidateWindow</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_validatewindow.o(i.WM_ValidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM_ValidateWindow &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>

<P><STRONG><a name="[43a]"></a>WM__ActivateClipRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm.o(i.WM__ActivateClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[417]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_criticalhandle.o(i.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[423]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm.o(i.WM__Client2Screen))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[425]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__ClipAtParentBorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[401]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, wm_timer.o(i.WM__DeleteAssocTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = WM__DeleteAssocTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[43d]"></a>WM__DeleteSecure</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm.o(i.WM__DeleteSecure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__DeleteSecure
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[403]"></a>WM__DetachWindow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm.o(i.WM__DetachWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[408]"></a>WM__ForEachDesc</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm__foreachdesc.o(i.WM__ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[3fb]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getclientrect.o(i.WM__GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>

<P><STRONG><a name="[33e]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(i.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__CalcBorderRect
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
</UL>

<P><STRONG><a name="[43f]"></a>WM__GetFirstSibling</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm__getfirstsibling.o(i.WM__GetFirstSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[23d]"></a>WM__GetNextIVR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, wm.o(i.WM__GetNextIVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[3f4]"></a>WM__GetPrevSibling</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm__getprevsibling.o(i.WM__GetPrevSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[400]"></a>WM__GetTopLevelLayer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm.o(i.WM__GetTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetTopLevelLayer
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[1de]"></a>WM__GetWindowSizeX</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(i.WM__GetWindowSizeX))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[1df]"></a>WM__GetWindowSizeY</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getwindowsize.o(i.WM__GetWindowSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
</UL>

<P><STRONG><a name="[23c]"></a>WM__InitIVRSearch</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, wm.o(i.WM__InitIVRSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[3f8]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, wm.o(i.WM__InsertWindowIntoList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[426]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM__Invalidate1Abs &rArr; _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[422]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateDrawAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[441]"></a>WM__InvalidateParent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__InvalidateParent
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[442]"></a>WM__InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM__InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[3f5]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__InvalidateRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
</UL>

<P><STRONG><a name="[443]"></a>WM__IsAncestor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm__isancestor.o(i.WM__IsAncestor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
</UL>

<P><STRONG><a name="[1a8]"></a>WM__IsEnabled</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm__isenabled.o(i.WM__IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsEnabled
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_DrawSkinFlex
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[419]"></a>WM__IsInModalArea</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm_touch.o(i.WM__IsInModalArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__IsInModalArea &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[4a5]"></a>WM__IsInWindow</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, wm_screen2win.o(i.WM__IsInWindow))
<BR><BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[3ff]"></a>WM__IsWindow</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wm.o(i.WM__IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
</UL>

<P><STRONG><a name="[42a]"></a>WM__MoveWindow</STRONG> (Thumb, 152 bytes, Stack size 64 bytes, wm_move.o(i.WM__MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 444 + Unknown Stack Size
<LI>Call Chain = WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>

<P><STRONG><a name="[445]"></a>WM__Paint</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, wm.o(i.WM__Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
<LI>Call Chain = WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[d0]"></a>WM__Paint1</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, wm.o(i.WM__Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = WM__Paint1 &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[49a]"></a>WM__RectIsNZ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm.o(i.WM__RectIsNZ))
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[41f]"></a>WM__RemoveCriticalHandle</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, wm_criticalhandle.o(i.WM__RemoveCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[404]"></a>WM__RemoveFromLinList</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(i.WM__RemoveFromLinList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveFromLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[43e]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm.o(i.WM__RemoveWindowFromList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveWindowFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[44a]"></a>WM__Screen2Client</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm__screen2client.o(i.WM__Screen2Client))
<BR><BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>

<P><STRONG><a name="[431]"></a>WM__SelectTopLevelLayer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(i.WM__SelectTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[42b]"></a>WM__SendMessage</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm__sendmessage.o(i.WM__SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[41b]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm__sendmessageifenabled.o(i.WM__SendMessageIfEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[432]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, wm__sendmessagenopara.o(i.WM__SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
</UL>

<P><STRONG><a name="[3fa]"></a>WM__SendMsgNoData</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, wm.o(i.WM__SendMsgNoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 332 + Unknown Stack Size
<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[44b]"></a>WM__SendPIDMessage</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, wm_touch.o(i.WM__SendPIDMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendTouchMessage
</UL>

<P><STRONG><a name="[41a]"></a>WM__SendTouchMessage</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_touch.o(i.WM__SendTouchMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = WM__SendTouchMessage &rArr; WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HandlePID
</UL>

<P><STRONG><a name="[438]"></a>WM__SetScrollbarV</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM__SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
</UL>

<P><STRONG><a name="[3e3]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, wm__updatechildpositions.o(i.WM__UpdateChildPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
</UL>

<P><STRONG><a name="[199]"></a>XPT2046_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bsp_xpt2046_lcd.o(i.XPT2046_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = XPT2046_Init &rArr; XPT2046_GPIO_SPI_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_GPIO_SPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[2e1]"></a>XPT2046_ReadAdc_Fliter</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, bsp_xpt2046_lcd.o(i.XPT2046_ReadAdc_Fliter))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = XPT2046_ReadAdc_Fliter &rArr; XPT2046_WriteCMD &rArr; XPT2046_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_WriteCMD
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_ReadCMD
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureY
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_X_MeasureX
</UL>

<P><STRONG><a name="[4ae]"></a>__0printf$1</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4f2]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[17d]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShot
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TIMEOUT_UserCallback
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON111Clicked
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON110Clicked
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON109Clicked
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON108Clicked
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON107Clicked
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON106Clicked
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON105Clicked
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON104Clicked
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON103Clicked
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON102Clicked
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON101Clicked
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON100Clicked
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON001Clicked
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON000Clicked
</UL>

<P><STRONG><a name="[4b0]"></a>__0sprintf$1</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4f3]"></a>__1sprintf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)

<P><STRONG><a name="[179]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShot
</UL>

<P><STRONG><a name="[4f4]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[4f5]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[4f6]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[b2]"></a>_cbBkWindow</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, app.o(i._cbBkWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _cbBkWindow &rArr; WM_GetId &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_GetSel
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON001Clicked
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON000Clicked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.UserAPP)
</UL>
<P><STRONG><a name="[79]"></a>_cbMidWin</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, app.o(i._cbMidWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _cbMidWin &rArr; WM_GetId &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_GetSel
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON111Clicked
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON110Clicked
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON109Clicked
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON108Clicked
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON107Clicked
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON106Clicked
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON105Clicked
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON104Clicked
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON103Clicked
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON102Clicked
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON101Clicked
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FUN_ICON100Clicked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.CreateMidWin)
</UL>
<P><STRONG><a name="[189]"></a>bsp_DelayUS</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, bsp.o(i.bsp_DelayUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = bsp_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrRd
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskUpdate
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Init
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Reset
</UL>

<P><STRONG><a name="[4c4]"></a>clust2sect</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ff.o(i.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[4c9]"></a>disk_initialize</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = disk_initialize &rArr; TM_FATFS_FLASH_SPI_disk_initialize &rArr; SPI_FLASH_ReadID &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[4ca]"></a>disk_ioctl</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = disk_ioctl
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[4cc]"></a>disk_read</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = disk_read &rArr; TM_FATFS_FLASH_SPI_disk_read &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[4cd]"></a>disk_status</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, diskio.o(i.disk_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = disk_status &rArr; TM_FATFS_FLASH_SPI_disk_status &rArr; SPI_FLASH_ReadID &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[4ce]"></a>disk_write</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM_FATFS_FLASH_SPI_disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[28b]"></a>emWin_LCD_Init</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, lcd.o(i.emWin_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = emWin_LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[17b]"></a>f_close</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ff.o(i.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = f_close &rArr; f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShot
</UL>

<P><STRONG><a name="[19d]"></a>f_mount</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, ff.o(i.f_mount))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[17a]"></a>f_open</STRONG> (Thumb, 342 bytes, Stack size 608 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskShot
</UL>

<P><STRONG><a name="[4cf]"></a>f_sync</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, ff.o(i.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[4ac]"></a>f_write</STRONG> (Thumb, 442 bytes, Stack size 40 bytes, ff.o(i.f_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteByte2File
</UL>

<P><STRONG><a name="[4ba]"></a>ff_convert</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, firecc936.o(i.ff_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ff_convert &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[4b5]"></a>ff_wtoupper</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, firecc936.o(i.ff_wtoupper))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[d9]"></a>fputc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, bsp_usart1.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL>
<P><STRONG><a name="[4b7]"></a>get_fat</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[4d4]"></a>get_fattime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, diskio.o(i.get_fattime))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[6f]"></a>main</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = main &rArr; OSInit &rArr; OS_TmrInit &rArr; OSTaskCreate &rArr; OS_TaskInitTCB
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[4b8]"></a>put_fat</STRONG> (Thumb, 300 bytes, Stack size 32 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3ae]"></a>SetSysClock</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[3af]"></a>SetSysClockTo72</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[3b5]"></a>TI1_Config</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[3b7]"></a>TI2_Config</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, stm32f10x_tim.o(i.TI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[3b9]"></a>TI3_Config</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, stm32f10x_tim.o(i.TI3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI3_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[3b3]"></a>TI4_Config</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, stm32f10x_tim.o(i.TI4_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI4_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[173]"></a>AppObjCreate</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, main.o(i.AppObjCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = AppObjCreate &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[176]"></a>AppTaskCreate</STRONG> (Thumb, 134 bytes, Stack size 56 bytes, main.o(i.AppTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = AppTaskCreate &rArr; OSTaskCreate &rArr; OS_TaskInitTCB
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskStart
</UL>

<P><STRONG><a name="[76]"></a>AppTaskShot</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, main.o(i.AppTaskShot))
<BR><BR>[Stack]<UL><LI>Max Depth = 984 + Unknown Stack Size
<LI>Call Chain = AppTaskShot &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_Serialize
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.AppTaskCreate)
</UL>
<P><STRONG><a name="[db]"></a>AppTaskStart</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, main.o(i.AppTaskStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = AppTaskStart &rArr; BSP_Init &rArr; GUI_Init &rArr; GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTaskCreate
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppObjCreate
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStatTaskCPUUsageInit
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_RefreshState
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_AccessTimes
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_Init
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Tick_Init
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[75]"></a>AppTaskUpdate</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, main.o(i.AppTaskUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 140 + Unknown Stack Size
<LI>Call Chain = AppTaskUpdate &rArr; TPAD_Init &rArr; TIMx_CHx_Cap_Init &rArr; TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_DelayUS
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Scan
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPAD_Init
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.AppTaskCreate)
</UL>
<P><STRONG><a name="[77]"></a>AppTaskUserapp</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.AppTaskUserapp))
<BR><BR>[Stack]<UL><LI>Max Depth = 868 + Unknown Stack Size
<LI>Call Chain = AppTaskUserapp &rArr; Touch_MainTask &rArr; _GetPhysValues &rArr; _WaitForPressedState &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.AppTaskCreate)
</UL>
<P><STRONG><a name="[78]"></a>_WriteByte2File</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, main.o(i._WriteByte2File))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = _WriteByte2File &rArr; f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.AppTaskShot)
</UL>
<P><STRONG><a name="[1bc]"></a>CPU_TS_Init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cpu_core.o(i.CPU_TS_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_TS_TmrInit
</UL>

<P><STRONG><a name="[193]"></a>Bsp_NVIC_Configuration</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bsp.o(i.Bsp_NVIC_Configuration))
<BR><BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_Init
</UL>

<P><STRONG><a name="[31f]"></a>ILI9341_Delay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bsp_ili9341_lcd.o(i.ILI9341_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ILI9341_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Rst
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_REG_Config
</UL>

<P><STRONG><a name="[318]"></a>ILI9341_FSMC_Config</STRONG> (Thumb, 106 bytes, Stack size 96 bytes, bsp_ili9341_lcd.o(i.ILI9341_FSMC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ILI9341_FSMC_Config &rArr; FSMC_NORSRAMInit
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Init
</UL>

<P><STRONG><a name="[31b]"></a>ILI9341_GPIO_Config</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, bsp_ili9341_lcd.o(i.ILI9341_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ILI9341_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Init
</UL>

<P><STRONG><a name="[31d]"></a>ILI9341_REG_Config</STRONG> (Thumb, 726 bytes, Stack size 8 bytes, bsp_ili9341_lcd.o(i.ILI9341_REG_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ILI9341_REG_Config &rArr; ILI9341_ReadID
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_ReadID
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Init
</UL>

<P><STRONG><a name="[31c]"></a>ILI9341_Rst</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, bsp_ili9341_lcd.o(i.ILI9341_Rst))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ILI9341_Rst &rArr; ILI9341_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ILI9341_Init
</UL>

<P><STRONG><a name="[450]"></a>XPT2046_DelayUS</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bsp_xpt2046_lcd.o(i.XPT2046_DelayUS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XPT2046_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_WriteCMD
</UL>

<P><STRONG><a name="[44d]"></a>XPT2046_GPIO_SPI_Config</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, bsp_xpt2046_lcd.o(i.XPT2046_GPIO_SPI_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = XPT2046_GPIO_SPI_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_Init
</UL>

<P><STRONG><a name="[44f]"></a>XPT2046_ReadCMD</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bsp_xpt2046_lcd.o(i.XPT2046_ReadCMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = XPT2046_ReadCMD
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_ReadAdc_Fliter
</UL>

<P><STRONG><a name="[44e]"></a>XPT2046_WriteCMD</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, bsp_xpt2046_lcd.o(i.XPT2046_WriteCMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = XPT2046_WriteCMD &rArr; XPT2046_DelayUS
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_DelayUS
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XPT2046_ReadAdc_Fliter
</UL>

<P><STRONG><a name="[3aa]"></a>SPI_TIMEOUT_UserCallback</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, fatfs_flash_spi.o(i.SPI_TIMEOUT_UserCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_WaitForWriteEnd
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_SendByte
</UL>

<P><STRONG><a name="[1bf]"></a>CreateBotWin</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, app.o(i.CreateBotWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 756 + Unknown Stack Size
<LI>Call Chain = CreateBotWin &rArr; ICONVIEW_AddBitmapItem &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSel
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateEx
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[1c7]"></a>CreateMidWin</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, app.o(i.CreateMidWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 764 + Unknown Stack Size
<LI>Call Chain = CreateMidWin &rArr; ICONVIEW_AddBitmapItem &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetTextColor
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSpace
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSel
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetIconAlign
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetFont
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetBkColor
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateEx
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[1cb]"></a>CreateTopWin</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, app.o(i.CreateTopWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
<LI>Call Chain = CreateTopWin &rArr; TEXT_CreateEx &rArr; TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[3de]"></a>_CreateXBF</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app.o(i._CreateXBF))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = _CreateXBF &rArr; GUI_XBF_CreateFont &rArr; GUI_SetFont &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF_CreateFont
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserAPP
</UL>

<P><STRONG><a name="[bc]"></a>_cbGetData</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app.o(i._cbGetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _cbGetData &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_FLASH_BufferRead
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i._CreateXBF)
</UL>
<P><STRONG><a name="[45e]"></a>_DispStringCentered</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, touch_calibrationapp.o(i._DispStringCentered))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = _DispStringCentered &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPhysValues
</UL>

<P><STRONG><a name="[3cd]"></a>_Explain</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, touch_calibrationapp.o(i._Explain))
<BR><BR>[Stack]<UL><LI>Max Depth = 772 + Unknown Stack Size
<LI>Call Chain = _Explain &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_GetState
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
</UL>

<P><STRONG><a name="[3ce]"></a>_GetPhysValues</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, touch_calibrationapp.o(i._GetPhysValues))
<BR><BR>[Stack]<UL><LI>Max Depth = 820 + Unknown Stack Size
<LI>Call Chain = _GetPhysValues &rArr; _WaitForPressedState &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_GetyPhys
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_GetxPhys
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WaitForPressedState
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispStringCentered
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_MainTask
</UL>

<P><STRONG><a name="[492]"></a>_WaitForPressedState</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, touch_calibrationapp.o(i._WaitForPressedState))
<BR><BR>[Stack]<UL><LI>Max Depth = 772 + Unknown Stack Size
<LI>Call Chain = _WaitForPressedState &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_GetState
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPhysValues
</UL>

<P><STRONG><a name="[99]"></a>LcdReadDataMultiple</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcdconf_flexcolor_template.o(i.LcdReadDataMultiple))
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[97]"></a>LcdWriteData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcdconf_flexcolor_template.o(i.LcdWriteData))
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[98]"></a>LcdWriteDataMultiple</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcdconf_flexcolor_template.o(i.LcdWriteDataMultiple))
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[96]"></a>LcdWriteReg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcdconf_flexcolor_template.o(i.LcdWriteReg))
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[4b2]"></a>check_fs</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[4bb]"></a>chk_chr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.chk_chr))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[4b4]"></a>cmp_lfn</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, ff.o(i.cmp_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = cmp_lfn
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[4b6]"></a>create_chain</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[4b9]"></a>create_name</STRONG> (Thumb, 538 bytes, Stack size 48 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = create_name &rArr; ff_convert &rArr; SPI_FLASH_BufferRead &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[4bd]"></a>dir_alloc</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ff.o(i.dir_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = dir_alloc &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[4c0]"></a>dir_find</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, ff.o(i.dir_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[4bf]"></a>dir_next</STRONG> (Thumb, 276 bytes, Stack size 24 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[4c5]"></a>dir_register</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_lfn
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[4be]"></a>dir_sdi</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[4d2]"></a>find_volume</STRONG> (Thumb, 826 bytes, Stack size 48 bytes, ff.o(i.find_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
</UL>

<P><STRONG><a name="[4c8]"></a>fit_lfn</STRONG> (Thumb, 104 bytes, Stack size 28 bytes, ff.o(i.fit_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = fit_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[4d3]"></a>follow_path</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[4c7]"></a>gen_numname</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, ff.o(i.gen_numname))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gen_numname
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[4d1]"></a>get_ldnumber</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ff.o(i.get_ldnumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[4d5]"></a>ld_clust</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ff.o(i.ld_clust))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[4c2]"></a>mem_cmp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, ff.o(i.mem_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[4c6]"></a>mem_cpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ff.o(i.mem_cpy))
<BR><BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[4bc]"></a>mem_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.mem_set))
<BR><BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[4b3]"></a>move_window</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[4d7]"></a>remove_chain</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[4d6]"></a>st_clust</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.st_clust))
<BR><BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[4c1]"></a>sum_sfn</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.sum_sfn))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[4d8]"></a>sync_fs</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, ff.o(i.sync_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sync_fs &rArr; sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[4c3]"></a>sync_window</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ff.o(i.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sync_window &rArr; disk_write &rArr; TM_FATFS_FLASH_SPI_disk_write &rArr; SPI_FLASH_BufferWrite &rArr; SPI_FLASH_PageWrite &rArr; SPI_FLASH_WaitForWriteEnd &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[4d0]"></a>validate</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = validate &rArr; disk_status &rArr; TM_FATFS_FLASH_SPI_disk_status &rArr; SPI_FLASH_ReadID &rArr; SPI_FLASH_SendByte &rArr; SPI_TIMEOUT_UserCallback &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[df]"></a>_Color2IndexBulk</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, guicc_565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[dc]"></a>_Color2Index_565</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guicc_565.o(i._Color2Index_565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[de]"></a>_GetIndexMask_565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_565.o(i._GetIndexMask_565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[e0]"></a>_Index2ColorBulk</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, guicc_565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_565.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>_Color2IndexBulk</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, guicc_m565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[e1]"></a>_Color2Index_M565</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guicc_m565.o(i._Color2Index_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[e3]"></a>_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m565.o(i._GetIndexMask_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[e5]"></a>_Index2ColorBulk</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guicc_m565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[21e]"></a>_AddFreeMemory</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gui_alloc.o(i._AddFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[21b]"></a>_Alloc</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, gui_alloc.o(i._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[483]"></a>_EnlargeBlocks</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gui_alloc.o(i._EnlargeBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[451]"></a>_GetMinIndex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i._GetMinIndex))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[221]"></a>_InitOnce</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, gui_alloc.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TestRAM
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[ce]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_alloc.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_alloc.o(i._InitOnce)
</UL>
<P><STRONG><a name="[454]"></a>_PopFreeBlock</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_alloc.o(i._PopFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _PopFreeBlock &rArr;  _EnlargeBlocks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[21f]"></a>_PushFreeBlock</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_alloc.o(i._PushFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _PushFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[223]"></a>_RemoveFreeBlock</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_alloc.o(i._RemoveFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[222]"></a>_RemoveHoles</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, gui_alloc.o(i._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[499]"></a>_TestRAM</STRONG> (Thumb, 234 bytes, Stack size 20 bytes, gui_alloc.o(i._TestRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _TestRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[452]"></a>_WriteTagData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i._WriteTagData))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[4a8]"></a>_SendU16</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_bmp_serialize.o(i._SendU16))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SendU16
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SerializeEx
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SendU32
</UL>

<P><STRONG><a name="[4a7]"></a>_SendU32</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_bmp_serialize.o(i._SendU32))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SendU32 &rArr; _SendU16
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SendU16
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SerializeEx
</UL>

<P><STRONG><a name="[234]"></a>_SerializeEx</STRONG> (Thumb, 514 bytes, Stack size 56 bytes, gui_bmp_serialize.o(i._SerializeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _SerializeEx &rArr; GUI_Index2Color &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Index2Color
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SendU32
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SendU16
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_BMP_SerializeEx
</UL>

<P><STRONG><a name="[28a]"></a>_InitContext</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_core.o(i._InitContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InitContext
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[8e]"></a>_OnExit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_core.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(i.GUI__Config)
</UL>
<P><STRONG><a name="[246]"></a>_UnlinkDevice</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_device.o(i._UnlinkDevice))
<BR><BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_UnlinkTaskDevices
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
</UL>

<P><STRONG><a name="[2d6]"></a>_Log2Phys</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_touch_driveranalog.o(i._Log2Phys))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Log2Phys
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[2d7]"></a>_SetMinMax</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_touch_driveranalog.o(i._SetMinMax))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Calibrate
</UL>

<P><STRONG><a name="[2dc]"></a>_StoreUnstable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gui_touch_driveranalog.o(i._StoreUnstable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _StoreUnstable &rArr; GUI_TOUCH_StoreUnstable &rArr; GUI_TOUCH_StoreState &rArr; GUI_TOUCH_StoreStateEx &rArr; GUI_PID_StoreState &rArr; _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_StoreUnstable
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TOUCH_Exec
</UL>

<P><STRONG><a name="[e9]"></a>_CalcSizeOfChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._CalcSizeOfChar))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Encode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>_Encode</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gui_uc_encodeutf8.o(i._Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Encode
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizeOfChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>_GetCharCode</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>_GetCharSize</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>_DispChar</STRONG> (Thumb, 380 bytes, Stack size 320 bytes, gui_xbf_prop.o(i._DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = _DispChar &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Read16
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_XBF__GetOffAndSize
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_xbf_prop.o(.constdata)
</UL>
<P><STRONG><a name="[320]"></a>_GetDevProp</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetDevProp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetSwapXYEx
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorYEx
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetMirrorXEx
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSizeEx
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSizeEx
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixel
</UL>

<P><STRONG><a name="[32c]"></a>_GetMaxValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetMaxValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
</UL>

<P><STRONG><a name="[be]"></a>_Draw</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, lcd_rle32.o(i._Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = _Draw &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawClip
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle32.o(i._DrawBitmap)
</UL>
<P><STRONG><a name="[46c]"></a>_DrawBitmap</STRONG> (Thumb, 402 bytes, Stack size 72 bytes, lcd_rle32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap &rArr; GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_RLE32
</UL>

<P><STRONG><a name="[ef]"></a>_DrawBitmap_RLE32</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd_rle32.o(i._DrawBitmap_RLE32))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap_RLE32 &rArr; _DrawBitmap &rArr; GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle32.o(.constdata)
</UL>
<P><STRONG><a name="[bd]"></a>_DrawClip</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, lcd_rle32.o(i._DrawClip))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = _DrawClip &rArr; _Draw &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle32.o(i._DrawBitmap)
</UL>
<P><STRONG><a name="[bf]"></a>_GetByte_pPixel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_rle32.o(i._GetByte_pPixel))
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle32.o(i._DrawBitmap_RLE32)
</UL>
<P><STRONG><a name="[c0]"></a>_GetPixel_pPixel</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_rle32.o(i._GetPixel_pPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetPixel_pPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Read32
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rle32.o(i._DrawBitmap_RLE32)
</UL>
<P><STRONG><a name="[495]"></a>_Read32</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, lcd_rle32.o(i._Read32))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixel_pPixel
</UL>

<P><STRONG><a name="[f0]"></a>_DrawBitmap</STRONG> (Thumb, 34 bytes, Stack size 56 bytes, guidrv_flexcolor.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[f1]"></a>_DrawHLine</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[f2]"></a>_DrawVLine</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>_FillRect</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[fa]"></a>_GetDevData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[f8]"></a>_GetDevFunc</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[c3]"></a>_GetDevFunc_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _GetDevFunc_Init &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[c8]"></a>_GetDevFunc_SetRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside)
</UL>
<P><STRONG><a name="[c5]"></a>_GetDevFunc_SetRectOutside</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetDevFunc_SetRectOutside
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[c2]"></a>_GetDevFunc_SetSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _GetDevFunc_SetSize &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[c1]"></a>_GetDevFunc_SetVSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _GetDevFunc_SetVSize &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[f9]"></a>_GetDevProp</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[fb]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[fc]"></a>_Log2PhysX_X0Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>_Log2PhysX_X0Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[fe]"></a>_Log2PhysX_X0Y1S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[102]"></a>_Log2PhysX_X0Y1S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[fd]"></a>_Log2PhysX_X1Y0S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>_Log2PhysX_X1Y0S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[ff]"></a>_Log2PhysX_X1Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[103]"></a>_Log2PhysX_X1Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[104]"></a>_Log2PhysY_X0Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[108]"></a>_Log2PhysY_X0Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>_Log2PhysY_X0Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>_Log2PhysY_X0Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[105]"></a>_Log2PhysY_X1Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[109]"></a>_Log2PhysY_X1Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[107]"></a>_Log2PhysY_X1Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>_Log2PhysY_X1Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[d3]"></a>_ReadPixelCust_16bpp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._ReadPixelCust_16bpp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[d2]"></a>_ReadPixelCust_18bpp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._ReadPixelCust_18bpp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[d4]"></a>_ReadRectCust_16bpp</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._ReadRectCust_16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadRectCust_16bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[d1]"></a>_ReadRectCust_18bpp</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._ReadRectCust_18bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadRectCust_18bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[c4]"></a>_SetDevFunc</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _SetDevFunc &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[f7]"></a>_SetOrg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>_SetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidrv_flexcolor.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>_XorPixel</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[46d]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 310 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[46e]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[46f]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[470]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[80]"></a>_DrawBitmap</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine4BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[81]"></a>_FillRect</STRONG> (Thumb, 242 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI__memset16
</UL>
<BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[84]"></a>_ReadData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._ReadData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[85]"></a>_WriteData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._WriteData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[4a0]"></a>_Data2Index_16bpp_B16</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, guidrv_flexcolor_func66709.o(i._Data2Index_16bpp_B16))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRect_16bpp_B16_I
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadPixel_16bpp_B16_I
</UL>

<P><STRONG><a name="[4a1]"></a>_Data2Index_16bpp_B8</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_flexcolor_func66709.o(i._Data2Index_16bpp_B8))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadRect_16bpp_B8
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReadPixel_16bpp_B8
</UL>

<P><STRONG><a name="[1]"></a>_ReadPixel_16bpp_B16_I</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidrv_flexcolor_func66709.o(i._ReadPixel_16bpp_B16_I))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadPixel_16bpp_B16_I
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Data2Index_16bpp_B16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(.data)
</UL>
<P><STRONG><a name="[7d]"></a>_ReadPixel_16bpp_B8</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidrv_flexcolor_func66709.o(i._ReadPixel_16bpp_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ReadPixel_16bpp_B8
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Data2Index_16bpp_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
</UL>
<P><STRONG><a name="[2]"></a>_ReadRect_16bpp_B16_I</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, guidrv_flexcolor_func66709.o(i._ReadRect_16bpp_B16_I))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ReadRect_16bpp_B16_I
</UL>
<BR>[Calls]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Data2Index_16bpp_B16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(.data)
</UL>
<P><STRONG><a name="[7e]"></a>_ReadRect_16bpp_B8</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, guidrv_flexcolor_func66709.o(i._ReadRect_16bpp_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ReadRect_16bpp_B8
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Data2Index_16bpp_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
</UL>
<P><STRONG><a name="[7f]"></a>_SetInterface</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guidrv_flexcolor_func66709.o(i._SetInterface))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
</UL>
<P><STRONG><a name="[7c]"></a>_SetOrientation</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidrv_flexcolor_func66709.o(i._SetOrientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetOrientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
</UL>
<P><STRONG><a name="[7a]"></a>_SetPhysRAMAddr</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, guidrv_flexcolor_func66709.o(i._SetPhysRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetPhysRAMAddr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
</UL>
<P><STRONG><a name="[7b]"></a>_SetRect</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, guidrv_flexcolor_func66709.o(i._SetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _SetRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(i.GUIDRV_FlexColor_SetFunc66709)
</UL>
<P><STRONG><a name="[d5]"></a>_SetReg_B16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_func66709.o(i._SetReg_B16))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(i._SetInterface)
</UL>
<P><STRONG><a name="[d7]"></a>_SetReg_B8</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guidrv_flexcolor_func66709.o(i._SetReg_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetReg_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(i._SetInterface)
</UL>
<P><STRONG><a name="[d6]"></a>_WritePara_B16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_func66709.o(i._WritePara_B16))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(i._SetInterface)
</UL>
<P><STRONG><a name="[d8]"></a>_WritePara_B8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_flexcolor_func66709.o(i._WritePara_B8))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66709.o(i._SetInterface)
</UL>
<P><STRONG><a name="[4]"></a>_Create</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, button_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>_Paint</STRONG> (Thumb, 130 bytes, Stack size 64 bytes, button_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 244 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skin.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, checkbox_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>_Paint</STRONG> (Thumb, 144 bytes, Stack size 72 bytes, checkbox_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_GetWindowSizeY &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skin.o(.data)
</UL>
<P><STRONG><a name="[1b4]"></a>_DrawBackground</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, checkbox_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[1b5]"></a>_DrawBitmap</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, checkbox_skinflex.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap &rArr; _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ErrorOut1
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[1b8]"></a>_DrawFocus</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, checkbox_skinflex.o(i._DrawFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 268 + Unknown Stack Size
<LI>Call Chain = _DrawFocus &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_GetSkinFlexButtonSize
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHECKBOX_DrawSkinFlex
</UL>

<P><STRONG><a name="[471]"></a>_GenCheck</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, checkbox_skinflex.o(i._GenCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _GenCheck &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBitmapPixel_1bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[48b]"></a>_SetBitmapPixel_1bpp</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, checkbox_skinflex.o(i._SetBitmapPixel_1bpp))
<BR><BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GenCheck
</UL>

<P><STRONG><a name="[8]"></a>_Create</STRONG> (Thumb, 40 bytes, Stack size 56 bytes, dropdown_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skin.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>_Paint</STRONG> (Thumb, 106 bytes, Stack size 80 bytes, dropdown_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skin.o(.data)
</UL>
<P><STRONG><a name="[1cf]"></a>_DrawBackground</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, dropdown_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI__DrawTwinArc4 &rArr; _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
</UL>

<P><STRONG><a name="[1d0]"></a>_DrawText</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, dropdown_skinflex.o(i._DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
<LI>Call Chain = _DrawText &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN_DrawSkinFlex
</UL>

<P><STRONG><a name="[c]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, framewin_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>_GetBorderSize</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, framewin_skin.o(i._GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>_Paint</STRONG> (Thumb, 240 bytes, Stack size 136 bytes, framewin_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetFirstChild &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__GetTitleLimits
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcTitleHeight
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skin.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, header_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>_Paint</STRONG> (Thumb, 270 bytes, Stack size 144 bytes, header_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skin.o(.data)
</UL>
<P><STRONG><a name="[308]"></a>_DrawArrow</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, header_skinflex.o(i._DrawArrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 228 + Unknown Stack Size
<LI>Call Chain = _DrawArrow &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[305]"></a>_DrawBackground</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, header_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[306]"></a>_DrawBitmap</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, header_skinflex.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitmap &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[309]"></a>_DrawOverlap</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, header_skinflex.o(i._DrawOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _DrawOverlap &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[307]"></a>_DrawText</STRONG> (Thumb, 158 bytes, Stack size 56 bytes, header_skinflex.o(i._DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = _DrawText &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetArrowPara
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_DrawSkinFlex
</UL>

<P><STRONG><a name="[45f]"></a>_GetArrowPara</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, header_skinflex.o(i._GetArrowPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawText
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArrow
</UL>

<P><STRONG><a name="[453]"></a>_AlignImage</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, iconview.o(i._AlignImage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AlignImage
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[91]"></a>_DrawBitmap</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, iconview.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 252 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap &rArr; GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_AddBitmapItem)
</UL>
<P><STRONG><a name="[92]"></a>_DrawText</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, iconview.o(i._DrawText))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = _DrawText &rArr; GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_AddBitmapItem)
</UL>
<P><STRONG><a name="[93]"></a>_GetImageSizes</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, iconview.o(i._GetImageSizes))
<BR>[Address Reference Count : 1]<UL><LI> iconview.o(i.ICONVIEW_AddBitmapItem)
</UL>
<P><STRONG><a name="[310]"></a>_GetIndexFromPos</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, iconview.o(i._GetIndexFromPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = _GetIndexFromPos &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[48f]"></a>_GetNumItemsPerLine</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, iconview.o(i._GetNumItemsPerLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexFromPos
</UL>

<P><STRONG><a name="[491]"></a>_GetNumVisLines</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, iconview.o(i._GetNumVisLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = _GetNumVisLines &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[496]"></a>_GetRelRectFromIndex</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, iconview.o(i._GetRelRectFromIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[30b]"></a>_ManageAutoScroll</STRONG> (Thumb, 218 bytes, Stack size 72 bytes, iconview.o(i._ManageAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisLines
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_AddBitmapItem
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[30d]"></a>_OnKey</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, iconview.o(i._OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = _OnKey &rArr; _SetSel &rArr; _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[30e]"></a>_OnPaint</STRONG> (Thumb, 478 bytes, Stack size 144 bytes, iconview.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocussedWindow
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AlignImage
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
</UL>

<P><STRONG><a name="[311]"></a>_SetSel</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, iconview.o(i._SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = _SetSel &rArr; _GetRelRectFromIndex &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRelRectFromIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_SetSel
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_CreateUser
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ICONVIEW_Callback
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnKey
</UL>

<P><STRONG><a name="[4aa]"></a>_UpdateScrollPos</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, iconview.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = _UpdateScrollPos &rArr; _GetNumItemsPerLine &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisLines
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumItemsPerLine
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSel
</UL>

<P><STRONG><a name="[11]"></a>_Create</STRONG> (Thumb, 48 bytes, Stack size 56 bytes, multipage_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multipage_skin.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>_Paint</STRONG> (Thumb, 1152 bytes, Stack size 208 bytes, multipage_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; MULTIPAGE__GetTextRect &rArr; _GetTextWidth &rArr; MULTIPAGE__GetPagePos &rArr; MULTIPAGE__GetPageSize &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetTextRect
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPagePos
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__CalcBorderRect
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multipage_skin.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, progbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>_Paint</STRONG> (Thumb, 320 bytes, Stack size 104 bytes, progbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 356 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; PROGBAR__GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skin.o(.data)
</UL>
<P><STRONG><a name="[38a]"></a>_DrawBackground</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, progbar_skinflex.o(i._DrawBackground))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _DrawBackground &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[15]"></a>_Create</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, radio_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skin.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>_Paint</STRONG> (Thumb, 450 bytes, Stack size 168 bytes, radio_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skin.o(.data)
</UL>
<P><STRONG><a name="[b8]"></a>_CalcPositions</STRONG> (Thumb, 334 bytes, Stack size 96 bytes, scrollbar_skin.o(i._CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__Rect2VRect
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(i._Create)
</UL>
<P><STRONG><a name="[17]"></a>_Create</STRONG> (Thumb, 52 bytes, Stack size 64 bytes, scrollbar_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>_Paint</STRONG> (Thumb, 186 bytes, Stack size 120 bytes, scrollbar_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 604 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skin.o(.data)
</UL>
<P><STRONG><a name="[a5]"></a>_DrawBackgroundH</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundH))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _DrawBackgroundH &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[a2]"></a>_DrawBackgroundV</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, scrollbar_skinflex.o(i._DrawBackgroundV))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _DrawBackgroundV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawFrame
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[460]"></a>_DrawFrame</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = _DrawFrame &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPixel
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundV
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBackgroundH
</UL>

<P><STRONG><a name="[a7]"></a>_DrawGraspH</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspH))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _DrawGraspH &rArr; GUI_DrawVLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[a4]"></a>_DrawGraspV</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, scrollbar_skinflex.o(i._DrawGraspV))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = _DrawGraspV &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinflex.o(i.SCROLLBAR_DrawSkinFlex)
</UL>
<P><STRONG><a name="[39a]"></a>_GetArrowPara</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, scrollbar_skinflex.o(i._GetArrowPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetArrowPara
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_DrawSkinFlex
</UL>

<P><STRONG><a name="[49e]"></a>_CopyItemInfo2Rect</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, slider_skin.o(i._CopyItemInfo2Rect))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[19]"></a>_Create</STRONG> (Thumb, 36 bytes, Stack size 56 bytes, slider_skin.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skin.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>_Paint</STRONG> (Thumb, 422 bytes, Stack size 128 bytes, slider_skin.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WM_SetUserClipRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CopyItemInfo2Rect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skin.o(.data)
</UL>
<P><STRONG><a name="[3a0]"></a>_DrawShaftH</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, slider_skinflex.o(i._DrawShaftH))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = _DrawShaftH &rArr; GUI_FillRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[39f]"></a>_DrawShaftV</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, slider_skinflex.o(i._DrawShaftV))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = _DrawShaftV &rArr; GUI_FillRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[3a2]"></a>_DrawThumbH</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, slider_skinflex.o(i._DrawThumbH))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _DrawThumbH &rArr; GUI_DrawGradientV &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[3a1]"></a>_DrawThumbV</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, slider_skinflex.o(i._DrawThumbV))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = _DrawThumbV &rArr; GUI_DrawGradientH &rArr; _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_DrawSkinFlex
</UL>

<P><STRONG><a name="[3b0]"></a>_Paint</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, text.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[446]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, wm.o(i.WM__PaintWinAndOverlays))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[402]"></a>_DeleteAllChildren</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm.o(i._DeleteAllChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _DeleteAllChildren &rArr;  WM_DeleteWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[43c]"></a>_DesktopHandle2Index</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm.o(i._DesktopHandle2Index))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[406]"></a>_DrawNext</STRONG> (Thumb, 82 bytes, Stack size 144 bytes, wm.o(i._DrawNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 684 + Unknown Stack Size
<LI>Call Chain = _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[405]"></a>_Exec1Input</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, wm.o(i._Exec1Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = _Exec1Input &rArr; GUI_PollKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[440]"></a>_FindNext_IVR</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, wm.o(i._FindNext_IVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[488]"></a>_Findx0</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, wm.o(i._Findx0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[489]"></a>_Findx1</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, wm.o(i._Findx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[487]"></a>_Findy1</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, wm.o(i._Findy1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[428]"></a>_Invalidate1Abs</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, wm.o(i._Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[b5]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, wm.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[447]"></a>_Paint1</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm.o(i._Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Paint1
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[449]"></a>_Paint1Trans</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, wm.o(i._Paint1Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Paint1Trans &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[448]"></a>_PaintTransChildren</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, wm.o(i._PaintTransChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[43b]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, wm.o(i._SetClipRectUserIntersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[b6]"></a>_cbPaintMemDev</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm.o(i._cbPaintMemDev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM__Paint)
</UL>
<P><STRONG><a name="[b4]"></a>cbBackWin</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, wm.o(i.cbBackWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = cbBackWin &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[3f6]"></a>_BringToTop</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, wm_bringtotop.o(i._BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = _BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[b7]"></a>_cbInvalidateOne</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_bringtotop.o(i._cbInvalidateOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _cbInvalidateOne &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_bringtotop.o(i._BringToTop)
</UL>
<P><STRONG><a name="[40b]"></a>_GetDialogItem</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm_getdialogitem.o(i._GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[90]"></a>_OnExit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__alpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__GetAlphaBuffer)
</UL>
<P><STRONG><a name="[2f9]"></a>_DrawTwinArc2</STRONG> (Thumb, 262 bytes, Stack size 88 bytes, gui__drawtwinarc.o(i._DrawTwinArc2))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = _DrawTwinArc2 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc2
</UL>

<P><STRONG><a name="[2fa]"></a>_DrawTwinArc4</STRONG> (Thumb, 370 bytes, Stack size 112 bytes, gui__drawtwinarc.o(i._DrawTwinArc4))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _DrawTwinArc4 &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTwinArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DrawTwinArc4
</UL>

<P><STRONG><a name="[2fc]"></a>_FillTrippleArc</STRONG> (Thumb, 572 bytes, Stack size 104 bytes, gui__drawtwinarc.o(i._FillTrippleArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = _FillTrippleArc &rArr; GUI_SetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTrippleArcPara
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__FillTrippleArc
</UL>

<P><STRONG><a name="[486]"></a>_GetTrippleArcPara</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, gui__drawtwinarc.o(i._GetTrippleArcPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetTrippleArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillTrippleArc
</UL>

<P><STRONG><a name="[482]"></a>_GetTwinArcPara</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui__drawtwinarc.o(i._GetTwinArcPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetTwinArcPara
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__sqrt32
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc4
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTwinArc2
</UL>

<P><STRONG><a name="[2f4]"></a>_DispLine</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gui_charline.o(i._DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DispLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[1c]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_charline.o(i._Log2VisBuffered))
<BR>[Address Reference Count : 1]<UL><LI> gui_charline.o(.data)
</UL>
<P><STRONG><a name="[25d]"></a>_SetRotation</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui_dispstringinrectex.o(i._SetRotation))
<BR><BR>[Stack]<UL><LI>Max Depth = 180 + Unknown Stack Size
<LI>Call Chain = _SetRotation &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectEx
</UL>

<P><STRONG><a name="[267]"></a>_DrawGradient</STRONG> (Thumb, 378 bytes, Stack size 88 bytes, gui_drawgradient.o(i._DrawGradient))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = _DrawGradient &rArr; GUI_GetColor &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientH
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawGradientV
</UL>

<P><STRONG><a name="[1fa]"></a>Abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.Abs))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[201]"></a>_DrawLineEnd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_drawline.o(i._DrawLineEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawLineEnd &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[1fc]"></a>_SetLineColor</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, gui_drawline.o(i._SetLineColor))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[1fd]"></a>_atan2</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, gui_drawline.o(i._atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[26e]"></a>_CopyString</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_errorout.o(i._CopyString))
<BR><BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ErrorOut1
</UL>

<P><STRONG><a name="[285]"></a>_GotoX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_goto.o(i._GotoX))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[286]"></a>_GotoY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_goto.o(i._GotoY))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[498]"></a>_IncPointer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_onkey.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>

<P><STRONG><a name="[2bc]"></a>_IncReadPointer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_onkey.o(i._IncReadPointer))
<BR><BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[4ab]"></a>_DecPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._DecPointer))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>

<P><STRONG><a name="[2b7]"></a>_IncPointer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_pid.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_GetState
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreState
</UL>

<P><STRONG><a name="[2b9]"></a>_StoreState</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui_pid.o(i._StoreState))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _StoreState
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DecPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PID_StoreState
</UL>

<P><STRONG><a name="[114]"></a>_Color2Index</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._Color2Index))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[117]"></a>_Color2IndexBulk</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, gui_setalpha.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[461]"></a>_DrawBitLine16BPP</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitLine16BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawBitLine16BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[466]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 366 bytes, Stack size 80 bytes, gui_setalpha.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawBitLine1BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[467]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DrawBitLine2BPP &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[468]"></a>_DrawBitLine32BPP</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitLine32BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawBitLine32BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[46a]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = _DrawBitLine4BPP &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[46b]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, gui_setalpha.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _DrawBitLine8BPP &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[119]"></a>_DrawBitmap</STRONG> (Thumb, 202 bytes, Stack size 64 bytes, gui_setalpha.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[465]"></a>_DrawBitmapLine</STRONG> (Thumb, 76 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawBitmapLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawBitmapLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[11a]"></a>_DrawHLine</STRONG> (Thumb, 114 bytes, Stack size 56 bytes, gui_setalpha.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = _DrawHLine &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPointers
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[11b]"></a>_DrawVLine</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_setalpha.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawVLine &rArr; _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>_FillRect</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_setalpha.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _FillRect &rArr; _DrawHLine &rArr; _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[47f]"></a>_GetBitsPerPixel</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_setalpha.o(i._GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetLine
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapLine
</UL>

<P><STRONG><a name="[123]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[122]"></a>_GetDevProp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[116]"></a>_GetIndexMask</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetIndexMask))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[463]"></a>_GetLine</STRONG> (Thumb, 154 bytes, Stack size 64 bytes, gui_setalpha.o(i._GetLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _GetLine &rArr; _GetBitsPerPixel &rArr; LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[11d]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[462]"></a>_GetPointers</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetPointers))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[124]"></a>_GetRect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_setalpha.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[115]"></a>_Index2Color</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_setalpha.o(i._Index2Color))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[118]"></a>_Index2ColorBulk</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, gui_setalpha.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[2c5]"></a>_InitAlpha</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, gui_setalpha.o(i._InitAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = _InitAlpha &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetAlpha
</UL>

<P><STRONG><a name="[464]"></a>_MixColors</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_setalpha.o(i._MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>

<P><STRONG><a name="[cd]"></a>_OnExit</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_setalpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i._InitAlpha)
</UL>
<P><STRONG><a name="[c9]"></a>_ReadRectFromMemdev</STRONG> (Thumb, 142 bytes, Stack size 56 bytes, gui_setalpha.o(i._ReadRectFromMemdev))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = _ReadRectFromMemdev &rArr; GUI_MEMDEV_GetYPos &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndices
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYPos
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXSize
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetXPos
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(i._GetLine)
</UL>
<P><STRONG><a name="[120]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_setalpha.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[11e]"></a>_SetPixelIndex</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_setalpha.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[11f]"></a>_XorPixel</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gui_setalpha.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex &rArr; _MixColors &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_setalpha.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_task.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_task.o(i.GUITASK_Init)
</UL>
<P><STRONG><a name="[127]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[128]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[125]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>_Color2IndexBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[129]"></a>_Color2Index_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888.o(i._Color2Index_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[12a]"></a>_GetIndexMask_8888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_8888.o(i._GetIndexMask_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[12c]"></a>_Index2ColorBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[12e]"></a>_SetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[12d]"></a>_SetColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[12f]"></a>_SetDrawMode</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, lcd.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_color.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_color.o(i.LCD_InitColors)
</UL>
<P><STRONG><a name="[473]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, lcd_rotatecw.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[472]"></a>_DrawBitmap</STRONG> (Thumb, 246 bytes, Stack size 112 bytes, lcd_rotatecw.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpfSetPixel
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapCW
</UL>

<P><STRONG><a name="[1e]"></a>_DrawBitmapCW</STRONG> (Thumb, 396 bytes, Stack size 112 bytes, lcd_rotatecw.o(i._DrawBitmapCW))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = _DrawBitmapCW &rArr; _TransformPointCW &rArr; WM_GetWindowRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TransformPointCW
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotatecw.o(.data)
</UL>
<P><STRONG><a name="[474]"></a>_GetpfSetPixel</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lcd_rotatecw.o(i._GetpfSetPixel))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[1f]"></a>_Rect2TextRect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_rotatecw.o(i._Rect2TextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Rect2TextRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_rotatecw.o(.data)
</UL>
<P><STRONG><a name="[47e]"></a>_TransformPointCW</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, lcd_rotatecw.o(i._TransformPointCW))
<BR><BR>[Stack]<UL><LI>Max Depth = 196 + Unknown Stack Size
<LI>Call Chain = _TransformPointCW &rArr; WM_GetWindowRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapCW
</UL>

<P><STRONG><a name="[477]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[478]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[479]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, guidev_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[130]"></a>_DrawBitmap</STRONG> (Thumb, 678 bytes, Stack size 104 bytes, guidev_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[131]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[132]"></a>_DrawVLine</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, guidev_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[133]"></a>_FillRect</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, guidev_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[13a]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[138]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[139]"></a>_GetDevProp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[134]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_16.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[13b]"></a>_GetRect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidev_16.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[137]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_16.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[476]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_16.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[136]"></a>_XorPixel</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[29e]"></a>_Min</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_banding.o(i._Min))
<BR><BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[2a9]"></a>_CreateStaticDevice</STRONG> (Thumb, 276 bytes, Stack size 48 bytes, guidev_staticdevices.o(i._CreateStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 644 + Unknown Stack Size
<LI>Call Chain = _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr; WM__UpdateChildPositions &rArr;  WM_ResizeWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaSuppressMixing
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[49b]"></a>_OnButtonPressed</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, button.o(i._OnButtonPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = _OnButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
</UL>

<P><STRONG><a name="[49c]"></a>_OnButtonReleased</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, button.o(i._OnButtonReleased))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
</UL>

<P><STRONG><a name="[20]"></a>_OnTouchDefault</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, button.o(i._OnTouchDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _OnTouchDefault &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.data)
</UL>
<P><STRONG><a name="[33f]"></a>_AdjustRect</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, multipage.o(i._AdjustRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _AdjustRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__CalcBorderRect
</UL>

<P><STRONG><a name="[343]"></a>_GetTextWidth</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, multipage.o(i._GetTextWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 292 + Unknown Stack Size
<LI>Call Chain = _GetTextWidth &rArr; MULTIPAGE__GetPagePos &rArr; MULTIPAGE__GetPageSize &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPagePos
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetTextRect
</UL>

<P><STRONG><a name="[45d]"></a>_DeleteTimer</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scrollbar.o(i._DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _DeleteTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[393]"></a>_OnTimer</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, scrollbar.o(i._OnTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = _OnTimer &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[390]"></a>_OnTouch</STRONG> (Thumb, 522 bytes, Stack size 104 bytes, scrollbar.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[3eb]"></a>_EffectRequiresRedraw</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, widget.o(i._EffectRequiresRedraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _EffectRequiresRedraw
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>

<P><STRONG><a name="[13e]"></a>_DrawDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDown))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[13f]"></a>_DrawDownRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDownRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>_DrawFlat</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawFlat))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[13c]"></a>_DrawUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUp))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[13d]"></a>_DrawUpRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUpRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[412]"></a>_GetDialogItem</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wm_getscrollbar.o(i._GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 372 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[415]"></a>_GetDefaultWin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_getwindowsize.o(i._GetDefaultWin))
<BR><BR>[Calls]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
</UL>

<P><STRONG><a name="[44c]"></a>_SetScrollbar</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_setscrollbar.o(i._SetScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>

<P><STRONG><a name="[b3]"></a>_cbTimer</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, wm_timer.o(i._cbTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _cbTimer &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_timer.o(i.WM_CreateTimer)
</UL>
<P><STRONG><a name="[25]"></a>_GetCharWrap</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, gui__wrap.o(i._GetCharWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = _GetCharWrap &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>_GetWordWrap</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, gui__wrap.o(i._GetWordWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = _GetWordWrap &rArr; GUI_GetCharDistX &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[303]"></a>_WrapGetNumCharsDisp</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__wrap.o(i._WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[203]"></a>_Add</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, gui_fillpolygon.o(i._Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Add
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[2cb]"></a>_Link</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gui_timer.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[8d]"></a>_OnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_timer.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[2cd]"></a>_RemoveFromLinList</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gui_timer.o(i._RemoveFromLinList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _RemoveFromLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[2ce]"></a>_Unlink</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_timer.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[141]"></a>_Color2Index_0</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, guicc_0.o(i._Color2Index_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[143]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guicc_0.o(i._GetIndexMask_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[142]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicc_0.o(i._Index2Color_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[2bf]"></a>LCD_ReadRectEx</STRONG> (Thumb, 404 bytes, Stack size 64 bytes, lcd_readrect.o(i.LCD_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
</UL>

<P><STRONG><a name="[47b]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 268 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[47c]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[469]"></a>_DrawBitLine32BPP_DDB</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, guidev_32.o(i._DrawBitLine32BPP_DDB))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawBitLine32BPP_DDB &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[47d]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 338 bytes, Stack size 40 bytes, guidev_32.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[144]"></a>_DrawBitmap</STRONG> (Thumb, 652 bytes, Stack size 112 bytes, guidev_32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[145]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_32.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[146]"></a>_DrawVLine</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, guidev_32.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>_FillRect</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, guidev_32.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[14e]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[14c]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[14d]"></a>_GetDevProp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[148]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_32.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[14f]"></a>_GetRect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidev_32.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[14b]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_32.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[149]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_32.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[47a]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_32.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[14a]"></a>_XorPixel</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, guidev_32.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[151]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[150]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_USAGE_BM_AddPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[152]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Clear))
<BR><BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[154]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[153]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_usagebm.o(i._GUI_USAGE_BM_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[45a]"></a>_Convert16</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert16 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[2b4]"></a>_WriteToActiveOpaque_8</STRONG> (Thumb, 806 bytes, Stack size 160 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveOpaque_8 &rArr; GUI_MEMDEV_GetDataPtr &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[2b5]"></a>_WriteToActiveOpaque_HT</STRONG> (Thumb, 752 bytes, Stack size 104 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_HT))
<BR><BR>[Stack]<UL><LI>Max Depth = 276 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveOpaque_HT &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[156]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, button_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> button_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[155]"></a>_Paint</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, button_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[158]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, checkbox_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[26]"></a>_GetButtonSize</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, checkbox_skinclassic.o(i._GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetDefaultEffect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skinclassic.o(.data)
</UL>
<P><STRONG><a name="[157]"></a>_Paint</STRONG> (Thumb, 454 bytes, Stack size 64 bytes, checkbox_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__GetBkColor &rArr; WM_GetBkColor &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetBkColor
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> checkbox_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[15a]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dropdown_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[159]"></a>_Paint</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, dropdown_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DROPDOWN__GetpItemLocked
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dropdown_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[15c]"></a>_Create</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, framewin_skinclassic.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = _Create &rArr; FRAMEWIN_SetOwnerDraw &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN_SetOwnerDraw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[27]"></a>_GetBorderSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, framewin_skinclassic.o(i._GetBorderSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetBorderSize
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skinclassic.o(.data)
</UL>
<P><STRONG><a name="[15b]"></a>_Paint</STRONG> (Thumb, 270 bytes, Stack size 112 bytes, framewin_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; FRAMEWIN__CalcPositions &rArr; FRAMEWIN__GetTitleLimits &rArr; WM_GetFirstChild &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FRAMEWIN__CalcPositions
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> framewin_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[15e]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, header_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> header_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[481]"></a>_DrawTriangle</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, header_skinclassic.o(i._DrawTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = _DrawTriangle &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[15d]"></a>_Paint</STRONG> (Thumb, 632 bytes, Stack size 112 bytes, header_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRect &rArr; GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[160]"></a>_Create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, multipage_skinclassic.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multipage_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[ba]"></a>_GetTouchedPage</STRONG> (Thumb, 174 bytes, Stack size 56 bytes, multipage_skinclassic.o(i._GetTouchedPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 388 + Unknown Stack Size
<LI>Call Chain = _GetTouchedPage &rArr; MULTIPAGE__GetTextRect &rArr; _GetTextWidth &rArr; MULTIPAGE__GetPagePos &rArr; MULTIPAGE__GetPageSize &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetTextRect
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPageSize
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multipage_skinclassic.o(i._Create)
</UL>
<P><STRONG><a name="[15f]"></a>_Paint</STRONG> (Thumb, 260 bytes, Stack size 96 bytes, multipage_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 428 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; MULTIPAGE__GetTextRect &rArr; _GetTextWidth &rArr; MULTIPAGE__GetPagePos &rArr; MULTIPAGE__GetPageSize &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetTextRect
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__GetPagePos
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIPAGE__CalcBorderRect
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multipage_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[162]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, progbar_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> progbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[480]"></a>_DrawPart</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, progbar_skinclassic.o(i._DrawPart))
<BR><BR>[Stack]<UL><LI>Max Depth = 284 + Unknown Stack Size
<LI>Call Chain = _DrawPart &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[161]"></a>_Paint</STRONG> (Thumb, 268 bytes, Stack size 64 bytes, progbar_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 348 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _DrawPart &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[164]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, radio_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> radio_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[28]"></a>_GetButtonSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, radio_skinclassic.o(i._GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skinclassic.o(.data)
</UL>
<P><STRONG><a name="[163]"></a>_Paint</STRONG> (Thumb, 460 bytes, Stack size 120 bytes, radio_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 396 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[bb]"></a>_CalcPositions</STRONG> (Thumb, 310 bytes, Stack size 48 bytes, scrollbar_skinclassic.o(i._CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 436 + Unknown Stack Size
<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__Rect2VRect
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetYSize
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetXSize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinclassic.o(i._Create)
</UL>
<P><STRONG><a name="[166]"></a>_Create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, scrollbar_skinclassic.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[165]"></a>_Paint</STRONG> (Thumb, 372 bytes, Stack size 88 bytes, scrollbar_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[168]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, slider_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> slider_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[167]"></a>_Paint</STRONG> (Thumb, 316 bytes, Stack size 88 bytes, slider_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 316 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__DrawVLine &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[16b]"></a>_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(i._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 236 + Unknown Stack Size
<LI>Call Chain = _DrawDown &rArr; _DrawDownRect &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[16c]"></a>_DrawDownRect</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, widget_effect_3d.o(i._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = _DrawDownRect &rArr; GUI_DrawHLine &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[16a]"></a>_DrawUpRect</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, widget_effect_3d.o(i._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = _DrawUpRect &rArr; GUI_DrawRect &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[444]"></a>_MoveDescendents</STRONG> (Thumb, 110 bytes, Stack size 72 bytes, wm_move.o(i._MoveDescendents))
<BR><BR>[Stack]<UL><LI>Max Depth = 380 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[4a4]"></a>_Screen2hWin</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, wm_screen2win.o(i._Screen2hWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + In Cycle
<LI>Call Chain = _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInWindow
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWinStop
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>

<P><STRONG><a name="[430]"></a>_Screen2hWinStop</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_screen2win.o(i._Screen2hWinStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Screen2hWinStop &rArr; _Screen2hWin &rArr;  _Screen2hWin (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindowEx
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Screen2hWin
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Screen2hWin
</UL>

<P><STRONG><a name="[42c]"></a>WM__ReleaseCapture</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, wm_setcapture.o(i.WM__ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 340 + Unknown Stack Size
<LI>Call Chain = WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
</UL>

<P><STRONG><a name="[45c]"></a>_CreateBuffer</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gui_sprite.o(i._CreateBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 260 + Unknown Stack Size
<LI>Call Chain = _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[48a]"></a>_FlushBuffer</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, gui_sprite.o(i._FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSpriteBkPixel
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
</UL>

<P><STRONG><a name="[48c]"></a>_GetBkPixel</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBkPixel &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[4a2]"></a>_ReleaseBuffer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_sprite.o(i._ReleaseBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 188 + Unknown Stack Size
<LI>Call Chain = _ReleaseBuffer &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[2c1]"></a>_SetPosition</STRONG> (Thumb, 680 bytes, Stack size 208 bytes, gui_sprite.o(i._SetPosition))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = _SetPosition &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_Pend &rArr; OS_TaskBlock &rArr; OS_TickListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSpriteBkPixel
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkPixel
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_SetPosition
</UL>

<P><STRONG><a name="[4a9]"></a>_SetSpriteBkPixel</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_sprite.o(i._SetSpriteBkPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _SetSpriteBkPixel &rArr; _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPosition
</UL>

<P><STRONG><a name="[4af]"></a>_printf_core</STRONG> (Thumb, 336 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>

<P><STRONG><a name="[da]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf1.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0sprintf$1)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
